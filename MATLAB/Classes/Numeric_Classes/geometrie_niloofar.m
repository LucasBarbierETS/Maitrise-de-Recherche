function out = model
%
% geometrie_niloofar.m
%
% Model exported on Feb 6 2025, 18:23 by COMSOL 6.2.0.415.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('E:\OneDrive - ETS\CRIAQ-REAR\Maitrise LB\MATLAB\Classes\Numeric_Classes');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.component('comp1').mesh.create('mesh1');

model.component('comp1').physics.create('acpr', 'PressureAcoustics', 'geom1');

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/acpr', true);

model.param.set('H', '50 [mm]');
model.param.set('W', '28 [mm]');

model.component('comp1').geom('geom1').create('sq1', 'Square');
model.component('comp1').geom('geom1').run('sq1');
model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature.remove('sq1');
model.component('comp1').geom('geom1').feature('r1').set('size', {'W' 'H'});
model.component('comp1').geom('geom1').feature('r1').set('base', 'corner');
model.component('comp1').geom('geom1').run('r1');
model.component('comp1').geom('geom1').feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').run('r1');
model.component('comp1').geom('geom1').feature('r1').set('base', 'corner');
model.component('comp1').geom('geom1').run('r1');

model.param.set('l', '1 [mm]');
model.param.set('d', '1 [mm]');
model.param.set('a1', '8 [mm]');

model.component('comp1').geom('geom1').run('r1');
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').set('size', {'a1' 'l'});
model.component('comp1').geom('geom1').feature('r2').set('pos', [0 45]);
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('type', 'curve');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('type', 'solid');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').runPre('fin');

model.component('comp1').variable.create('var1');

model.component('comp1').geom('geom1').run;

model.component('comp1').variable('var1').set('a1', '8 [mm]');

model.component('comp1').geom('geom1').feature('r2').set('size', {'a1' '1'});
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('size', [8 1]);
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('selresult', true);
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').setAttribute('construction', 'on');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').create('c1', 'Circle');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').run('c1');
model.component('comp1').geom('geom1').feature.remove('c1');
model.component('comp1').geom('geom1').lengthUnit('nm');
model.component('comp1').geom('geom1').lengthUnit('mm');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('size', {'a1' '1'});
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature('r2').set('size', {'a1' 'l'});
model.component('comp1').geom('geom1').run('r2');

model.component('comp1').variable.remove('var1');

model.component('comp1').geom('geom1').runPre('fin');

model.label('new - 2D.mph');

model.param.remove('a1');
model.param.set('a1', '8 [mm]');
model.param.descr('a1', '');
model.param.remove('Ha1');
model.param.set('m', '4 [mm]');
model.param.set('n', '7.4 [mm]');
model.param.set('Ha1', '9*m+8*l');

model.component('comp1').geom('geom1').feature('r2').label('a1');
model.component('comp1').geom('geom1').feature('r2').set('pos', {'0' 'Ha1'});
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').feature.duplicate('r3', 'r2');
model.component('comp1').geom('geom1').feature('r3').set('rot', 180);
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').feature('r3').set('pos', {'W-a1' 'Ha1'});
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').feature.remove('r3');

model.param.set('a2', 'a1 + d');
model.param.set('Ha2', '8*m + 7*l');

model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('r3').set('size', {'a2' '1'});
model.component('comp1').geom('geom1').feature('r3').label('a2');
model.component('comp1').geom('geom1').feature('r3').set('size', {'a2' 'l'});
model.component('comp1').geom('geom1').feature('r3').set('pos', {'0' 'Ha2'});
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').run('size1');

model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').runPre('fin');

model.component('comp1').mesh('mesh1').feature.remove('se1');
model.component('comp1').mesh('mesh1').feature.remove('size1');
model.component('comp1').mesh('mesh1').feature.remove('ftri1');

model.param.set('a3', 'a1+2*d');
model.param.set('Ha3', '7*m+6*l');
model.param.set('Ha2', '8*m +7*l');
model.param.set('a2', 'a1+d');
model.param.set('a4', 'a1+3*d');
model.param.set('Ha4', '6*m');
model.param.remove('Ha2');
model.param.set('Ha2', '8*m +7*l');
model.param.descr('Ha2', '');
model.param.remove('Ha4');
model.param.remove('Ha3');
model.param.remove('Ha2');
model.param.remove('Ha1');
model.param.set('Ha1', '9*m+8*l');
model.param.descr('Ha1', '');
model.param.set('Ha2', '8*m +7*l');
model.param.descr('Ha2', '');
model.param.set('Ha3', '7*m+6*l');
model.param.descr('Ha3', '');
model.param.set('Ha4', '6*m');
model.param.descr('Ha4', '');
model.param.set('a5', 'a1+4*d');
model.param.set('a6', 'a1+5*d');
model.param.set('a7', 'a1+6*d');
model.param.set('a8', 'a1+7*d');
model.param.set('a9', 'a1+8*d');
model.param.set('b1', '8 [mm]');
model.param.set('b2', 'b1+d');
model.param.set('b3', 'b1+2*d');
model.param.set('b4', 'b1+3*d');
model.param.set('b5', 'b1+4*d');
model.param.set('b6', 'b1+5*d');
model.param.set('b7', 'b1+6*d');
model.param.set('b8', 'b1+7*d');
model.param.set('b9', 'b1+8*d');
model.param.set('Ha4', '6*m+5*l');
model.param.set('Ha5', '5*m+4*l');
model.param.set('Ha2', 'Ha1-(m+0.001)');
model.param.remove('Ha3');
model.param.set('Ha3', 'Ha1-2*(m+0.001)');
model.param.set('Ha4', 'Ha1-3*(m+0.001)');
model.param.set('Ha5', 'Ha1-4*(m+0.001)');
model.param.set('Ha6', 'Ha1-(m+0.001)');
model.param.set('Ha7', 'Ha1-(m+0.001)');
model.param.set('Ha8', 'Ha1-(m+0.001)');
model.param.set('Ha9', 'Ha1-(m+0.001)');
model.param.set('Ha6', 'Ha1-5*(m+0.001)');
model.param.set('Ha7', 'Ha1-6*(m+0.001)');
model.param.set('Ha8', 'Ha1-7*(m+0.001)');
model.param.set('Ha9', 'Ha1-8*(m+0.001)');
model.param.set('Ha2', 'Ha1-(m+l)');
model.param.set('Ha3', 'Ha1-2*(m+l)');
model.param.set('Ha4', 'Ha1-3*(m+l)');
model.param.set('Ha5', 'Ha1-4*(m+l)');
model.param.set('Ha6', 'Ha1-5*(m+l)');
model.param.set('Ha7', 'Ha1-6*(m+l)');
model.param.set('Ha8', 'Ha1-7*(m+l)');
model.param.set('Ha9', 'Ha1-8*(m+l)');
model.param.set('Ha1', 'H-(m+l)');

model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r2' 'r3'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run;

model.component('comp1').material.create('mat1', 'Common');
model.component('comp1').material('mat1').propertyGroup('def').func.create('eta', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('rho', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('k', 'Piecewise');
model.component('comp1').material('mat1').propertyGroup('def').func.create('cs', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an1', 'Analytic');
model.component('comp1').material('mat1').propertyGroup('def').func.create('an2', 'Analytic');
model.component('comp1').material('mat1').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.component('comp1').material('mat1').propertyGroup.create('NonlinearModel', 'Nonlinear model');
model.component('comp1').material('mat1').propertyGroup.create('idealGas', 'Ideal gas');
model.component('comp1').material('mat1').propertyGroup('idealGas').func.create('Cp', 'Piecewise');
model.component('comp1').material('mat1').label('Air');
model.component('comp1').material('mat1').set('family', 'air');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('eta').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/R_const[K*mol/J]/T');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('fununit', 'kg/m^3');
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('rho').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '293.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('def').func('k').set('fununit', 'W/(m*K)');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*R_const[K*mol/J]/0.02897*T)');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('fununit', 'm/s');
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('cs').set('plotargs', {'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('funcname', 'alpha_p');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('expr', '-1/rho(pA,T)*d(rho(pA,T),T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('args', {'pA' 'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('fununit', '1/K');
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('argunit', {'Pa' 'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an1').set('plotargs', {'pA' '101325' '101325'; 'T' '273.15' '373.15'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('funcname', 'muB');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('expr', '0.6*eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('args', {'T'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('fununit', 'Pa*s');
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('argunit', {'K'});
model.component('comp1').material('mat1').propertyGroup('def').func('an2').set('plotargs', {'T' '200' '1600'});
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', '');
model.component('comp1').material('mat1').propertyGroup('def').set('molarmass', '');
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', '');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)' '0' '0' '0' 'alpha_p(pA,T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('molarmass', '0.02897[kg/mol]');
model.component('comp1').material('mat1').propertyGroup('def').set('bulkviscosity', 'muB(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('def').set('dynamicviscosity', 'eta(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat1').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.component('comp1').material('mat1').propertyGroup('def').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat1').propertyGroup('def').set('density', 'rho(pA,T)');
model.component('comp1').material('mat1').propertyGroup('def').set('thermalconductivity', {'k(T)' '0' '0' '0' 'k(T)' '0' '0' '0' 'k(T)'});
model.component('comp1').material('mat1').propertyGroup('def').set('soundspeed', 'cs(T)');
model.component('comp1').material('mat1').propertyGroup('def').addInput('temperature');
model.component('comp1').material('mat1').propertyGroup('def').addInput('pressure');
model.component('comp1').material('mat1').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.component('comp1').material('mat1').propertyGroup('NonlinearModel').set('BA', '(def.gamma+1)/2');
model.component('comp1').material('mat1').propertyGroup('idealGas').func('Cp').label('Piecewise 2');
model.component('comp1').material('mat1').propertyGroup('idealGas').func('Cp').set('arg', 'T');
model.component('comp1').material('mat1').propertyGroup('idealGas').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.component('comp1').material('mat1').propertyGroup('idealGas').func('Cp').set('argunit', 'K');
model.component('comp1').material('mat1').propertyGroup('idealGas').func('Cp').set('fununit', 'J/(kg*K)');
model.component('comp1').material('mat1').propertyGroup('idealGas').set('Rs', 'R_const/Mn');
model.component('comp1').material('mat1').propertyGroup('idealGas').set('heatcapacity', 'Cp(T)');
model.component('comp1').material('mat1').propertyGroup('idealGas').set('ratioofspecificheat', '1.4');
model.component('comp1').material('mat1').propertyGroup('idealGas').set('molarmass', '0.02897');
model.component('comp1').material('mat1').propertyGroup('idealGas').addInput('temperature');
model.component('comp1').material('mat1').propertyGroup('idealGas').addInput('pressure');
model.component('comp1').material('mat1').materialType('nonSolid');
model.component('comp1').material('mat1').set('family', 'air');
model.component('comp1').material('mat1').selection.set([1]);

model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').run('size1');
model.component('comp1').mesh('mesh1').feature.remove('se1');

model.study('std1').feature('freq').set('plist', 'range(10,50,4000)');

model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(10,50,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').set('data', 'dset1');
model.result('pg1').create('surf1', 'Surface');
model.result('pg1').feature('surf1').set('expr', {'acpr.p_t'});
model.result('pg1').feature('surf1').set('colortable', 'Wave');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').label('Acoustic Pressure (acpr)');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').set('data', 'dset1');
model.result('pg2').create('surf1', 'Surface');
model.result('pg2').feature('surf1').set('expr', {'acpr.Lp_t'});
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').label('Sound Pressure Level (acpr)');

model.sol('sol1').runAll;

model.result('pg1').run;

model.param.set('Ha2', 'H-2*(m+l)');

model.component('comp1').geom('geom1').runPre('fin');

model.param.set('Ha3', 'H-3*(m+l)');
model.param.set('Ha4', 'H-2*(m+l)');
model.param.set('Ha5', 'H-2*(m+l)');
model.param.set('Ha6', 'H-2*(m+l)');
model.param.set('Ha7', 'H-2*(m+l)');
model.param.set('Ha8', 'H-2*(m+l)');
model.param.set('Ha9', 'H-2*(m+l)');
model.param.set('Ha4', 'H-4*(m+l)');
model.param.set('Ha5', 'H-5*(m+l)');
model.param.set('Ha6', 'H-6*(m+l)');
model.param.set('Ha7', 'H-7*(m+l)');
model.param.set('Ha8', 'H-8*(m+l)');
model.param.set('Ha9', 'H-9*(m+l)');
model.param.set('m', '5 [mm]');
model.param.set('Ha1', 'H-(m)');
model.param.set('Ha2', 'H-2*(m)');
model.param.set('Ha3', 'H-3*(m)');
model.param.set('Ha4', 'H-4*(m)');
model.param.set('Ha5', 'H-5*(m)');
model.param.set('Ha6', 'H-6*(m)');
model.param.set('Ha7', 'H-7*(m)');
model.param.set('Ha8', 'H-8*(m)');
model.param.set('Ha9', 'H-9*(m)');
model.param.set('Hb1', 'H-n');
model.param.set('Hb2', 'H-n-m');
model.param.set('Hb3', 'H-n-m');
model.param.set('Hb4', 'H-n-m');
model.param.set('Hb3', 'H-n-2*m');
model.param.set('Hb4', 'H-n-3*m');
model.param.set('Hb5', 'H-n-4*m');
model.param.set('Hb6', 'H-n-2*m');
model.param.set('Hb7', 'H-n-2*m');
model.param.set('Hb8', 'H-n-2*m');
model.param.set('Hb9', 'H-n-2*m');
model.param.set('Hb6', 'H-n-5*m');
model.param.set('Hb7', 'H-n-6*m');
model.param.set('Hb8', 'H-n-7*m');
model.param.set('Hb9', 'H-n-8*m');

model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').create('r4', 'Rectangle');
model.component('comp1').geom('geom1').feature.remove('dif1');
model.component('comp1').geom('geom1').feature('r4').label('a3');
model.component('comp1').geom('geom1').feature('r4').set('size', {'a3' 'l'});
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').feature('r4').set('pos', {'0' 'Ha3'});
model.component('comp1').geom('geom1').run('r4');
model.component('comp1').geom('geom1').run('r4');
model.component('comp1').geom('geom1').create('r5', 'Rectangle');
model.component('comp1').geom('geom1').feature('r5').label('a4');
model.component('comp1').geom('geom1').feature('r5').set('size', {'a4' 'l'});
model.component('comp1').geom('geom1').feature('r5').set('pos', {'0' 'Ha4'});
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').create('r6', 'Rectangle');
model.component('comp1').geom('geom1').feature('r6').label('a5');
model.component('comp1').geom('geom1').feature('r6').set('size', {'a5' 'l'});
model.component('comp1').geom('geom1').feature('r6').set('pos', {'0' 'Ha5'});
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').create('e1', 'Ellipse');
model.component('comp1').geom('geom1').feature.remove('e1');
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').create('r7', 'Rectangle');
model.component('comp1').geom('geom1').feature('r7').label('a6');
model.component('comp1').geom('geom1').feature('r7').set('size', {'a6' 'l'});
model.component('comp1').geom('geom1').feature('r7').set('pos', {'0' 'Ha6'});
model.component('comp1').geom('geom1').run('r7');
model.component('comp1').geom('geom1').run('r7');
model.component('comp1').geom('geom1').create('r8', 'Rectangle');
model.component('comp1').geom('geom1').feature('r8').set('size', {'a7' '1'});
model.component('comp1').geom('geom1').feature('r8').label('a7');
model.component('comp1').geom('geom1').feature('r8').set('size', {'a7' 'l'});
model.component('comp1').geom('geom1').feature('r8').set('pos', {'0' 'Ha7'});
model.component('comp1').geom('geom1').run('r8');
model.component('comp1').geom('geom1').run('r8');
model.component('comp1').geom('geom1').create('r9', 'Rectangle');
model.component('comp1').geom('geom1').feature('r9').label('a8');
model.component('comp1').geom('geom1').feature('r9').set('size', {'a8' 'l'});
model.component('comp1').geom('geom1').feature('r9').set('pos', {'0' 'Ha8'});
model.component('comp1').geom('geom1').run('r9');
model.component('comp1').geom('geom1').run('r9');
model.component('comp1').geom('geom1').create('r10', 'Rectangle');
model.component('comp1').geom('geom1').feature('r10').set('size', {'a9' '1'});
model.component('comp1').geom('geom1').feature('r10').label('a9');
model.component('comp1').geom('geom1').feature('r10').set('size', {'a9' 'l'});
model.component('comp1').geom('geom1').feature('r10').set('pos', {'0' 'Ha9'});
model.component('comp1').geom('geom1').run('r10');
model.component('comp1').geom('geom1').run('r10');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r10' 'r2' 'r3' 'r4' 'r5' 'r6' 'r7' 'r8' 'r9'});
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(10,50,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').geom('geom1').feature.remove('dif1');
model.component('comp1').geom('geom1').runPre('fin');

model.label('new - 2D.mph');

model.component('comp1').geom('geom1').run('r10');
model.component('comp1').geom('geom1').create('r11', 'Rectangle');
model.component('comp1').geom('geom1').feature('r11').label('b1');
model.component('comp1').geom('geom1').feature('r11').set('size', {'b1' 'l'});
model.component('comp1').geom('geom1').feature('r11').set('pos', {'W-b1' 'Hb1'});
model.component('comp1').geom('geom1').run('r11');
model.component('comp1').geom('geom1').feature.duplicate('r12', 'r11');
model.component('comp1').geom('geom1').feature('r12').label('b2');
model.component('comp1').geom('geom1').feature('r12').set('size', {'b2' 'l'});
model.component('comp1').geom('geom1').feature('r12').set('pos', {'W-b2' 'Hb2'});
model.component('comp1').geom('geom1').run('r12');
model.component('comp1').geom('geom1').feature.duplicate('r13', 'r12');
model.component('comp1').geom('geom1').feature('r13').set('size', {'b3' 'l'});
model.component('comp1').geom('geom1').feature('r13').set('pos', {'W-b3' 'Hb3'});
model.component('comp1').geom('geom1').run('r13');
model.component('comp1').geom('geom1').feature('r13').label('b3');
model.component('comp1').geom('geom1').feature.duplicate('r14', 'r13');
model.component('comp1').geom('geom1').feature('r14').label('b4');
model.component('comp1').geom('geom1').feature('r14').set('size', {'b4' 'l'});
model.component('comp1').geom('geom1').feature('r14').set('pos', {'W-b4' 'Hb4'});
model.component('comp1').geom('geom1').run('r14');
model.component('comp1').geom('geom1').feature.duplicate('r15', 'r14');
model.component('comp1').geom('geom1').feature('r15').label('b5');
model.component('comp1').geom('geom1').feature('r15').set('size', {'b5' 'l'});
model.component('comp1').geom('geom1').feature('r15').set('pos', {'W-b5' 'Hb5'});
model.component('comp1').geom('geom1').run('r15');
model.component('comp1').geom('geom1').feature.duplicate('r16', 'r15');
model.component('comp1').geom('geom1').feature('r16').label('b6');
model.component('comp1').geom('geom1').feature('r16').set('size', {'b6' 'l'});
model.component('comp1').geom('geom1').feature('r16').set('pos', {'W-b6' 'Hb6'});
model.component('comp1').geom('geom1').run('r16');
model.component('comp1').geom('geom1').feature.duplicate('r17', 'r16');
model.component('comp1').geom('geom1').feature('r17').label('b7');
model.component('comp1').geom('geom1').feature('r17').set('size', {'b7' 'l'});
model.component('comp1').geom('geom1').feature('r17').set('pos', {'W-b7' 'Hb7'});
model.component('comp1').geom('geom1').run('r17');
model.component('comp1').geom('geom1').feature.duplicate('r18', 'r17');
model.component('comp1').geom('geom1').feature('r18').label('b8');
model.component('comp1').geom('geom1').feature('r18').set('size', {'b8' 'l'});
model.component('comp1').geom('geom1').feature('r18').set('pos', {'W-b8' 'Hb8'});
model.component('comp1').geom('geom1').run('r18');
model.component('comp1').geom('geom1').feature.duplicate('r19', 'r18');
model.component('comp1').geom('geom1').feature('r19').label('b9');
model.component('comp1').geom('geom1').feature('r19').set('pos', {'W-b9' 'Hb9'});
model.component('comp1').geom('geom1').feature('r19').set('size', {'b9' 'l'});
model.component('comp1').geom('geom1').run('r19');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('r19');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1' 'r10' 'r11' 'r12' 'r13' 'r14' 'r15' 'r16' 'r17' 'r18'  ...
'r19' 'r2' 'r3' 'r4' 'r5' 'r6' 'r7' 'r8' 'r9'});
model.component('comp1').geom('geom1').run('r19');
model.component('comp1').geom('geom1').feature('dif1').selection('input').remove({'r13'});
model.component('comp1').geom('geom1').feature('dif1').selection('input').init;
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r10' 'r11' 'r12' 'r13' 'r14' 'r15' 'r16' 'r17' 'r18' 'r19'  ...
'r2' 'r3' 'r4' 'r5' 'r6' 'r7' 'r8' 'r9'});
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').create('r20', 'Rectangle');
model.component('comp1').geom('geom1').feature('r20').set('size', [28 650]);
model.component('comp1').geom('geom1').feature('r20').set('pos', [0 50]);
model.component('comp1').geom('geom1').run('r20');
model.component('comp1').geom('geom1').run;

model.component('comp1').material('mat1').selection.set([1 2]);

model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(10,50,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;

model.component('comp1').physics('acpr').create('port1', 'Port', 1);
model.component('comp1').physics('acpr').feature('port1').selection.set([32]);
model.component('comp1').physics('acpr').feature('port1').set('pamp', 1);
model.component('comp1').physics('acpr').feature('port1').set('PortType', 'Slit');
model.component('comp1').physics('acpr').create('port2', 'Port', 1);
model.component('comp1').physics('acpr').feature.remove('port2');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(10,50,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;

model.label('new - 2D.mph');

model.result('pg1').run;

model.variable.create('var1');
model.variable('var1').set('R', 'comp1.acpr.port1.P_out/', 'Reflection Coefficient');
model.variable('var1').set('R', 'comp1.acpr.port1.P_out/comp1.acpr.port1.P_in');
model.variable('var1').set('alpha', '1-R^2');
model.variable('var1').descr('alpha', 'Absorption Coefficient');

model.result.create('pg3', 'PlotGroup1D');
model.result('pg3').run;
model.result('pg3').create('glob1', 'Global');
model.result('pg3').feature('glob1').set('markerpos', 'datapoints');
model.result('pg3').feature('glob1').set('linewidth', 'preference');
model.result('pg3').feature('glob1').setIndex('expr', 'alpha', 0);

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(10,50,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;

model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').automatic(true);
model.component('comp1').mesh('mesh1').autoMeshSize(3);
model.component('comp1').mesh('mesh1').run;

model.study('std1').feature('freq').set('plist', 'range(100,10,4000)');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,10,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;

model.study('std1').feature('freq').set('plist', 'range(100,5,4000)');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,5,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;

model.component('comp1').mesh('mesh1').autoMeshSize(1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,5,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;

model.component('comp1').mesh('mesh1').autoMeshSize(3);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').autoMeshSize(2);
model.component('comp1').mesh('mesh1').run;

model.result('pg3').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,5,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;

model.component('comp1').mesh('mesh1').automatic(false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,5,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;

model.component('comp1').mesh('mesh1').create('edg1', 'Edge');
model.component('comp1').mesh('mesh1').feature('edg1').selection.set([1 4 7 10 13 16 19 22 25 28 70 71 72 73 74 75 76 77]);
model.component('comp1').mesh('mesh1').feature('edg1').set('smoothmaxiter', 6);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature.remove('edg1');
model.component('comp1').mesh('mesh1').feature('size1').active(false);
model.component('comp1').mesh('mesh1').feature('se1').active(false);
model.component('comp1').mesh('mesh1').feature('ftri1').active(false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('size').set('hauto', 5);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('size').set('custom', true);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('size').set('custom', false);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature.remove('ftri1');
model.component('comp1').mesh('mesh1').feature.remove('se1');
model.component('comp1').mesh('mesh1').feature.remove('size1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('size').set('custom', true);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 14);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxiter', 5);
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxdepth', 5);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxiter', 8);
model.component('comp1').mesh('mesh1').feature('ftri1').set('smoothmaxdepth', 8);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').create('fq1', 'FreeQuad');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('fq1').selection.set([1 2]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature.remove('ftri1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxiter', 10);
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxdepth', 10);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 5);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').current('fq1');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('size').set('hmax', 0.5);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('size').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('size').set('hgrad', 1.1);
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(100,5,4000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'dDef');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('glob1').set('expr', {'acpr.port1.P_out'});
model.result('pg3').feature('glob1').set('descr', {'Power per unit length of outgoing mode'});
model.result('pg3').feature('glob1').set('unit', {'W/m'});
model.result('pg3').feature('glob1').setIndex('expr', 'acpr.port1.P_out/acpr.port1.P_in', 0);
model.result('pg3').run;
model.result('pg3').feature('glob1').setIndex('expr', '1-(acpr.port1.P_out/acpr.port1.P_in)^2', 0);
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('glob1').set('expr', {'acpr.S11'});
model.result('pg3').feature('glob1').set('descr', {'S11'});
model.result('pg3').feature('glob1').set('unit', {'1'});
model.result('pg3').run;
model.result('pg3').feature('glob1').setIndex('expr', '1-acpr.S11', 0);
model.result('pg3').run;
model.result('pg3').feature('glob1').setIndex('expr', '1-(acpr.S11)^2', 0);
model.result('pg3').run;
model.result('pg3').feature('glob1').set('expr', {'acpr.pav_out_11'});
model.result('pg3').feature('glob1').set('descr', {'Average pressure of outgoing mode 1 (source mode 1)'});
model.result('pg3').feature('glob1').set('unit', {'Pa'});
model.result('pg3').feature('glob1').setIndex('expr', 'acpr.pav_out_11/acpr.pav_in_11', 0);
model.result('pg3').feature('glob1').setIndex('expr', 'acpr.pav_out_11/acpr.pav_in_1', 0);
model.result('pg3').run;
model.result('pg3').feature('glob1').setIndex('expr', '1-(acpr.pav_out_11/acpr.pav_in_1)^2', 0);
model.result('pg3').run;
model.result('pg3').feature('glob1').set('expr', {'acpr.port1.P_out'});
model.result('pg3').feature('glob1').set('descr', {'Power per unit length of outgoing mode'});
model.result('pg3').feature('glob1').set('unit', {'W/m'});
model.result('pg3').feature('glob1').setIndex('expr', '1-(acpr.port1.P_out/acpr.port1.P_in)^2', 0);
model.result('pg3').run;

model.label('2D Geometry.mph');

model.study.remove('std1');

model.component('comp1').physics.create('ta', 'ThermoacousticsSinglePhysics', 'geom1');
model.component('comp1').physics('ta').selection.set([]);
model.component('comp1').physics.remove('acpr');
model.component('comp1').physics('ta').selection.all;
model.component('comp1').physics('ta').create('port1', 'Port', 1);
model.component('comp1').physics('ta').feature('port1').selection.set([32]);
model.component('comp1').physics('ta').feature('port1').set('PortType', 'PlaneWave');
model.component('comp1').physics('ta').feature('port1').set('pamp', 1);
model.component('comp1').physics('ta').feature('init1').set('T', 293);
model.component('comp1').physics.create('ta2', 'ThermoacousticsSinglePhysics', 'geom1');
model.component('comp1').physics('ta2').selection.set([]);

model.study.create('std1');
model.study('std1').create('freq', 'Frequency');
model.study('std1').feature('freq').setSolveFor('/physics/ta', true);
model.study('std1').feature('freq').setSolveFor('/physics/ta2', true);
model.study('std1').feature('freq').set('plist', 'range(10,50,4000)');

model.component('comp1').physics.remove('ta2');

model.component('comp1').mesh('mesh1').feature('fq1').selection.set([2]);
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxiter', 5);
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxdepth', 5);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxiter', 10);
model.component('comp1').mesh('mesh1').feature('fq1').set('smoothmaxdepth', 10);
model.component('comp1').mesh('mesh1').feature('fq1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hgradactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hcurveactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hnarrowactive', true);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hmax', 5);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hmax', 6);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').create('fq2', 'FreeQuad');
model.component('comp1').mesh('mesh1').feature('fq2').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('fq2').selection.set([1]);
model.component('comp1').mesh('mesh1').feature('fq2').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hgradactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hcurveactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hnarrowactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.1);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', 0.03);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hgrad', 1.3);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hgrad', 1.1);
model.component('comp1').mesh('mesh1').run('fq2');

model.study('std1').feature('freq').set('plist', 'range(50,50,400)');

model.sol.create('sol1');
model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(50,50,400)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'Default');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.result.create('pg1', 'PlotGroup2D');
model.result('pg1').label('Acoustic Pressure (ta)');
model.result('pg1').set('showlegendsunit', true);
model.result('pg1').set('defaultPlotID', 'thermoacoustics/ThermoacousticsPhysicsInterfaceComponents/icom5/pdef1/pcond2/pg2');
model.result('pg1').feature.create('surf1', 'Surface');
model.result('pg1').feature('surf1').label('Surface');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('colortable', 'Wave');
model.result('pg1').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg1').feature('surf1').set('smooth', 'internal');
model.result('pg1').feature('surf1').set('showsolutionparams', 'on');
model.result('pg1').feature('surf1').set('data', 'parent');
model.result.create('pg2', 'PlotGroup2D');
model.result('pg2').label('Acoustic Velocity (ta)');
model.result('pg2').set('showlegendsunit', true);
model.result('pg2').set('defaultPlotID', 'thermoacoustics/ThermoacousticsPhysicsInterfaceComponents/icom5/pdef1/pcond2/pg1');
model.result('pg2').feature.create('surf1', 'Surface');
model.result('pg2').feature('surf1').label('Surface');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('expr', 'ta.v_inst');
model.result('pg2').feature('surf1').set('smooth', 'internal');
model.result('pg2').feature('surf1').set('showsolutionparams', 'on');
model.result('pg2').feature('surf1').set('data', 'parent');
model.result.create('pg3', 'PlotGroup2D');
model.result('pg3').label('Temperature Variation (ta)');
model.result('pg3').set('showlegendsunit', true);
model.result('pg3').set('defaultPlotID', 'thermoacoustics/ThermoacousticsPhysicsInterfaceComponents/icom5/pdef1/pcond2/pcond3/pg1');
model.result('pg3').feature.create('surf1', 'Surface');
model.result('pg3').feature('surf1').label('Surface');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('expr', 'ta.T_t');
model.result('pg3').feature('surf1').set('colortable', 'ThermalWave');
model.result('pg3').feature('surf1').set('colorscalemode', 'linearsymmetric');
model.result('pg3').feature('surf1').set('smooth', 'internal');
model.result('pg3').feature('surf1').set('showsolutionparams', 'on');
model.result('pg3').feature('surf1').set('data', 'parent');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.create('pg4', 'PlotGroup1D');
model.result('pg4').run;
model.result('pg4').create('glob1', 'Global');
model.result('pg4').feature('glob1').set('markerpos', 'datapoints');
model.result('pg4').feature('glob1').set('linewidth', 'preference');
model.result('pg4').feature('glob1').set('expr', {'ta.port1.P_out'});
model.result('pg4').feature('glob1').set('descr', {'Power per unit length of outgoing mode'});
model.result('pg4').feature('glob1').set('unit', {'W/m'});
model.result('pg4').feature('glob1').setIndex('expr', '1-(ta.port1.P_out/ta.port1.P_out)^2', 0);
model.result('pg4').run;
model.result('pg4').feature('glob1').setIndex('expr', '1-(ta.port1.P_out/ta.port1.P_in)^2', 0);
model.result('pg4').run;

model.component('comp1').mesh('mesh1').feature('fq2').active(false);
model.component('comp1').mesh('mesh1').create('bl1', 'BndLayer');
model.component('comp1').mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom(2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([]);
model.component('comp1').mesh('mesh1').feature('bl1').selection.allGeom;
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').create('blp1', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 10);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 15);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp1').set('blnlayers', 8);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature.remove('blp1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.all;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79]);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.all;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blnlayers', 10);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.03);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhtot');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhtot', 0.1);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhtot');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhtot', 0.01);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhtot', 1);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.01);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').run('bl1');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(50,50,400)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.study('std1').feature('freq').set('plist', 'range(50,10,400)');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(50,10,400)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').run;

model.study('std1').feature('freq').set('plist', 'range(200,20,1500)');

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.005);
model.component('comp1').mesh('mesh1').run('bl1');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(200,20,1500)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;

model.label('2D Geometry- thermoviscose 3.mph');

model.result('pg4').run;

model.component('comp1').geom('geom1').feature('r20').set('size', [28 250]);
model.component('comp1').geom('geom1').run('r20');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').run('fq1');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(200,20,1500)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').run;

model.study('std1').feature('freq').set('plist', 'range(500,20,6000)');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,6000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;

model.component('comp1').geom('geom1').feature('r20').set('size', [28 200]);
model.component('comp1').geom('geom1').run('r20');
model.component('comp1').geom('geom1').run;

model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').run('fq1');

model.result.dataset.create('mesh1', 'Mesh');
model.result.dataset('mesh1').set('mesh', 'mesh1');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Mesh Plot 5');
model.result('pg5').set('data', 'mesh1');
model.result('pg5').set('inherithide', true);
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').create('mesh1', 'Mesh');
model.result('pg5').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg5').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg5').run;

model.component('comp1').mesh('mesh1').run;

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Mesh Plot 6');
model.result('pg6').set('data', 'mesh1');
model.result('pg6').set('inherithide', true);
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').create('mesh1', 'Mesh');
model.result('pg6').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg6').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg6').run;
model.result('pg4').run;
model.result('pg4').run;

model.component('comp1').mesh('mesh1').run('fq1');

model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Mesh Plot 7');
model.result('pg7').set('data', 'mesh1');
model.result('pg7').set('inherithide', true);
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').create('mesh1', 'Mesh');
model.result('pg7').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg7').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg7').run;

model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,6000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;
model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Mesh Plot 8');
model.result('pg8').set('data', 'mesh1');
model.result('pg8').set('inherithide', true);
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').create('mesh1', 'Mesh');
model.result('pg8').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg8').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg8').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg8').run;
model.result('pg4').run;

model.component('comp1').mesh('mesh1').feature('fq2').active(true);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Mesh Plot 9');
model.result('pg9').set('data', 'mesh1');
model.result('pg9').set('inherithide', true);
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').create('mesh1', 'Mesh');
model.result('pg9').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg9').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg9').run;

model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmaxactive', false);
model.component('comp1').mesh('mesh1').run;

model.result('pg9').run;
model.result.remove('pg9');
model.result('pg8').run;
model.result.remove('pg8');
model.result('pg7').run;
model.result.remove('pg7');
model.result('pg6').run;
model.result.remove('pg6');
model.result('pg5').run;
model.result.remove('pg5');

model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq1').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', '0.000055');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', '0.00066');
model.component('comp1').mesh('mesh1').run('fq1');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.0013);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', '0.00011');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 4);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.0013);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', '0.00011');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', '.0011');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', '0.00011');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', '.048');
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', 0.004);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Mesh Plot 5');
model.result('pg5').set('data', 'mesh1');
model.result('pg5').set('inherithide', true);
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').create('mesh1', 'Mesh');
model.result('pg5').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg5').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg5').run;

model.component('comp1').mesh('mesh1').feature('fq2').active(false);
model.component('comp1').mesh('mesh1').run('bl1');

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Mesh Plot 6');
model.result('pg6').set('data', 'mesh1');
model.result('pg6').set('inherithide', true);
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').create('mesh1', 'Mesh');
model.result('pg6').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg6').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg6').run;

model.component('comp1').mesh('mesh1').feature('fq2').active(true);
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').run('bl1');

model.result('pg6').run;
model.result.remove('pg6');
model.result('pg5').run;
model.result.remove('pg5');
model.result.create('pg5', 'PlotGroup2D');
model.result('pg5').label('Mesh Plot 5');
model.result('pg5').set('data', 'mesh1');
model.result('pg5').set('inherithide', true);
model.result('pg5').set('showlegendsmaxmin', true);
model.result('pg5').create('mesh1', 'Mesh');
model.result('pg5').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg5').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg5').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg5').run;

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.04);
model.component('comp1').mesh('mesh1').run('bl1');

model.result.create('pg6', 'PlotGroup2D');
model.result('pg6').label('Mesh Plot 6');
model.result('pg6').set('data', 'mesh1');
model.result('pg6').set('inherithide', true);
model.result('pg6').set('showlegendsmaxmin', true);
model.result('pg6').create('mesh1', 'Mesh');
model.result('pg6').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg6').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg6').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg6').run;

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 0.005);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.result.create('pg7', 'PlotGroup2D');
model.result('pg7').label('Mesh Plot 7');
model.result('pg7').set('data', 'mesh1');
model.result('pg7').set('inherithide', true);
model.result('pg7').set('showlegendsmaxmin', true);
model.result('pg7').create('mesh1', 'Mesh');
model.result('pg7').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg7').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg7').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg7').run;
model.result.table.create('evl2', 'Table');
model.result.table('evl2').comments('Interactive 2D values');
model.result.table('evl2').label('Evaluation 2D');
model.result.table('evl2').addRow([2.281949520111084 16.0841007232666 1], [0 0 0]);
model.result.table('evl2').addRow([2.2622382640838623 16.399478912353516 0.9998000829651382], [0 0 0]);
model.result.table('evl2').addRow([2.2770214080810547 16.842979431152344 0.9998026542359335], [0 0 0]);
model.result.table.remove('evl2');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('qualmeasure', 'growth');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('qualmeasure', 'skewness');
model.result('pg7').run;
model.result.table.create('evl2', 'Table');
model.result.table('evl2').comments('Interactive 2D values');
model.result.table('evl2').label('Evaluation 2D');
model.result.table('evl2').addRow([16.536407470703125 105.10922241210938 0.678216248396831], [0 0 0]);
model.result.table('evl2').addRow([4.843060493469238 3.3650708198547363 0.9997085626532367], [0 0 0]);
model.result.table('evl2').addRow([4.843060493469238 3.3650708198547363 0.9997085626532367], [0 0 0]);
model.result.table('evl2').addRow([2.5486137866973877 2.8394336700439453 0.9999039144579904], [0 0 0]);
model.result.table('evl2').addRow([0.02107146382331848 4.961274147033691 0.49964487278967806], [0 0 0]);
model.result.table('evl2').addRow([0.10867764055728912 4.861152648925781 0.6668753913292249], [0 0 0]);
model.result.table('evl2').addRow([0.1180640310049057 4.823606967926025 0.9444444444444372], [0 0 0]);
model.result('pg7').feature('mesh1').set('colortabletrans', 'reverse');
model.result('pg7').run;
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('colortabletrans', 'none');
model.result('pg7').feature('mesh1').set('qualmeasure', 'maxangle');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('qualmeasure', 'growth');
model.result('pg7').run;
model.result.table('evl2').addRow([0.1222342848777771 4.8903584480285645 0.30576766214261986], [0 0 0]);
model.result.table('evl2').addRow([0.16812348365783691 4.8872294425964355 0.5689936246029716], [0 0 0]);
model.result('pg7').feature('mesh1').set('qualmeasure', 'skewness');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('colortabletrans', 'reverse');
model.result('pg7').feature('mesh1').set('qualmeasure', 'maxangle');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('qualmeasure', 'growth');
model.result('pg7').run;
model.result('pg7').feature('mesh1').set('qualmeasure', 'skewness');
model.result('pg7').run;

model.study('std1').feature('freq').set('plist', 'range(500,20,3000)');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');

model.component('comp1').mesh('mesh1').feature('bl1').active(false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').create('dis1', 'Distribution');
model.component('comp1').mesh('mesh1').feature('fq2').feature('dis1').selection.set([1 2 3 4 5 6]);
model.component('comp1').mesh('mesh1').feature('fq2').feature.remove('dis1');
model.component('comp1').mesh('mesh1').feature('bl1').create('sca1', 'Scale');
model.component('comp1').mesh('mesh1').feature('bl1').feature.remove('sca1');
model.component('comp1').mesh('mesh1').run;

model.result.create('pg8', 'PlotGroup2D');
model.result('pg8').label('Mesh Plot 8');
model.result('pg8').set('data', 'mesh1');
model.result('pg8').set('inherithide', true);
model.result('pg8').set('showlegendsmaxmin', true);
model.result('pg8').create('mesh1', 'Mesh');
model.result('pg8').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg8').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg8').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg8').run;

model.label('2D Geometry- thermoviscose 4.mph');

model.component('comp1').mesh('mesh1').feature('bl1').active(true);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hgradactive', false);

model.result.create('pg9', 'PlotGroup2D');
model.result('pg9').label('Mesh Plot 9');
model.result('pg9').set('data', 'mesh1');
model.result('pg9').set('inherithide', true);
model.result('pg9').set('showlegendsmaxmin', true);
model.result('pg9').create('mesh1', 'Mesh');
model.result('pg9').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg9').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg9').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg9').run;

model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', 0.04);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', '.1');
model.component('comp1').mesh('mesh1').run('fq2');
model.component('comp1').mesh('mesh1').run;

model.result.create('pg10', 'PlotGroup2D');
model.result('pg10').label('Mesh Plot 10');
model.result('pg10').set('data', 'mesh1');
model.result('pg10').set('inherithide', true);
model.result('pg10').set('showlegendsmaxmin', true);
model.result('pg10').create('mesh1', 'Mesh');
model.result('pg10').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg10').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg10').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg10').run;

model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.1);
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.5);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg11', 'PlotGroup2D');
model.result('pg11').label('Mesh Plot 11');
model.result('pg11').set('data', 'mesh1');
model.result('pg11').set('inherithide', true);
model.result('pg11').set('showlegendsmaxmin', true);
model.result('pg11').create('mesh1', 'Mesh');
model.result('pg11').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg11').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg11').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg11').run;

model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.3);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg12', 'PlotGroup2D');
model.result('pg12').label('Mesh Plot 12');
model.result('pg12').set('data', 'mesh1');
model.result('pg12').set('inherithide', true);
model.result('pg12').set('showlegendsmaxmin', true);
model.result('pg12').create('mesh1', 'Mesh');
model.result('pg12').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg12').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg12').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg12').run;

model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('fq2').feature('size1').set('hmax', 0.2);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg13', 'PlotGroup2D');
model.result('pg13').label('Mesh Plot 13');
model.result('pg13').set('data', 'mesh1');
model.result('pg13').set('inherithide', true);
model.result('pg13').set('showlegendsmaxmin', true);
model.result('pg13').create('mesh1', 'Mesh');
model.result('pg13').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg13').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg13').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg13').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;

model.component('comp1').mesh('mesh1').feature('fq1').active(false);
model.component('comp1').mesh('mesh1').feature('fq2').active(false);
model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').active(false);
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', '.048');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.004);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.5);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').active(true);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').selection.set([2]);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').feature('bl1').active(false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 2);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg14', 'PlotGroup2D');
model.result('pg14').label('Mesh Plot 14');
model.result('pg14').set('data', 'mesh1');
model.result('pg14').set('inherithide', true);
model.result('pg14').set('showlegendsmaxmin', true);
model.result('pg14').create('mesh1', 'Mesh');
model.result('pg14').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg14').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg14').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg14').run;
model.result('pg9').run;
model.result('pg14').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;

model.component('comp1').mesh('mesh1').feature('bl1').active(true);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([1]);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.all;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').active(false);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature.remove('bl1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').create('bl1', 'BndLayer');
model.component('comp1').mesh('mesh1').feature('bl1').create('blp', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom(2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([]);
model.component('comp1').mesh('mesh1').feature('bl1').selection.allGeom;
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([1]);
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78]);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg15', 'PlotGroup2D');
model.result('pg15').label('Mesh Plot 15');
model.result('pg15').set('data', 'mesh1');
model.result('pg15').set('inherithide', true);
model.result('pg15').set('showlegendsmaxmin', true);
model.result('pg15').create('mesh1', 'Mesh');
model.result('pg15').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg15').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg15').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg15').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').feature('aDef').set('nullfun', 'auto');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').attach('std1');
model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg4').run;
model.result('pg4').create('ptgr1', 'PointGraph');
model.result('pg4').feature('ptgr1').set('markerpos', 'datapoints');
model.result('pg4').feature('ptgr1').set('linewidth', 'preference');
model.result('pg4').create('lngr1', 'LineGraph');
model.result('pg4').feature('lngr1').set('markerpos', 'datapoints');
model.result('pg4').feature('lngr1').set('linewidth', 'preference');
model.result('pg4').run;
model.result.report.create('rpt1', 'Report');
model.result.report('rpt1').set('templatesource', 'brief');
model.result.report('rpt1').feature.clear;
model.result.report('rpt1').create('tp1', 'TitlePage');
model.result.report('rpt1').create('toc1', 'TableOfContents');
model.result.report('rpt1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec1').set('heading', 'Global Definitions');
model.result.report('rpt1').feature('sec1').create('root1', 'Model');
model.result.report('rpt1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec1').set('heading', 'Parameters');
model.result.report('rpt1').feature('sec1').feature('sec1').create('param1', 'Parameter');
model.result.report('rpt1').feature('sec1').feature('sec1').feature('param1').set('noderef', 'default');
model.result.report('rpt1').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec1').feature('sec2').set('heading', 'Variables');
model.result.report('rpt1').feature('sec1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').set('heading', 'Variables 1');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').create('var1', 'Variables');
model.result.report('rpt1').feature('sec1').feature('sec2').feature('sec1').feature('var1').set('noderef', 'var1');
model.result.report('rpt1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec2').set('heading', 'Component 1');
model.result.report('rpt1').feature('sec2').create('comp1', 'ModelNode');
model.result.report('rpt1').feature('sec2').feature('comp1').set('noderef', 'comp1');
model.result.report('rpt1').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec1').set('heading', 'Definitions');
model.result.report('rpt1').feature('sec2').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').set('heading', 'Coordinate Systems');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').set('heading', 'Boundary System 1');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').create('csys1', 'CoordinateSystem');
model.result.report('rpt1').feature('sec2').feature('sec1').feature('sec1').feature('sec1').feature('csys1').set('noderef', 'sys1');
model.result.report('rpt1').feature('sec2').create('sec2', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec2').set('heading', 'Geometry 1');
model.result.report('rpt1').feature('sec2').feature('sec2').create('geom1', 'Geometry');
model.result.report('rpt1').feature('sec2').feature('sec2').feature('geom1').set('noderef', 'geom1');
model.result.report('rpt1').feature('sec2').create('sec3', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec2').feature('sec3').set('heading', 'Materials');
model.result.report('rpt1').feature('sec2').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').set('heading', 'Air');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').create('mat1', 'Material');
model.result.report('rpt1').feature('sec2').feature('sec3').feature('sec1').feature('mat1').set('noderef', 'mat1');
model.result.report('rpt1').feature('sec2').create('sec4', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec4').set('heading', 'Thermoviscous Acoustics, Frequency Domain');
model.result.report('rpt1').feature('sec2').feature('sec4').create('phys1', 'Physics');
model.result.report('rpt1').feature('sec2').feature('sec4').feature('phys1').set('noderef', 'ta');
model.result.report('rpt1').feature('sec2').create('sec5', 'Section');
model.result.report('rpt1').feature('sec2').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec2').feature('sec5').set('heading', 'Mesh 1');
model.result.report('rpt1').feature('sec2').feature('sec5').create('mesh1', 'Mesh');
model.result.report('rpt1').feature('sec2').feature('sec5').feature('mesh1').set('noderef', 'mesh1');
model.result.report('rpt1').create('sec3', 'Section');
model.result.report('rpt1').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec3').set('heading', 'Study 1');
model.result.report('rpt1').feature('sec3').create('std1', 'Study');
model.result.report('rpt1').feature('sec3').feature('std1').set('noderef', 'std1');
model.result.report('rpt1').create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').set('source', 'custom');
model.result.report('rpt1').feature('sec4').set('heading', 'Results');
model.result.report('rpt1').feature('sec4').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').set('source', 'custom');
model.result.report('rpt1').feature('sec4').feature('sec1').set('heading', 'Datasets');
model.result.report('rpt1').feature('sec4').feature('sec1').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').set('heading', 'Study 1/Solution 1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec1').feature('dset1').set('noderef', 'dset1');
model.result.report('rpt1').feature('sec4').feature('sec1').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').set('heading', 'Mesh 1');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').create('dset1', 'DataSet');
model.result.report('rpt1').feature('sec4').feature('sec1').feature('sec2').feature('dset1').set('noderef', 'mesh1');
model.result.report('rpt1').feature('sec4').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec2').set('source', 'custom');
model.result.report('rpt1').feature('sec4').feature('sec2').set('heading', 'Tables');
model.result.report('rpt1').feature('sec4').feature('sec2').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').set('heading', 'Evaluation 2D');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').create('mtbl1', 'Table');
model.result.report('rpt1').feature('sec4').feature('sec2').feature('sec1').feature('mtbl1').set('noderef', 'evl2');
model.result.report('rpt1').feature('sec4').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').set('source', 'custom');
model.result.report('rpt1').feature('sec4').feature('sec3').set('heading', 'Plot Groups');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec1', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').set('heading', 'Acoustic Pressure (ta)');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec1').feature('pg1').set('noderef', 'pg1');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec2', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').set('heading', 'Acoustic Velocity (ta)');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec2').feature('pg1').set('noderef', 'pg2');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec3', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').set('heading', 'Temperature Variation (ta)');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec3').feature('pg1').set('noderef', 'pg3');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec4', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec4').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec4').set('heading', '1D Plot Group 4');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec4').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec4').feature('pg1').set('noderef', 'pg4');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec5', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec5').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec5').set('heading', 'Mesh Plot 5');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec5').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec5').feature('pg1').set('noderef', 'pg5');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec6', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec6').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec6').set('heading', 'Mesh Plot 6');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec6').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec6').feature('pg1').set('noderef', 'pg6');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec7', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec7').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec7').set('heading', 'Mesh Plot 7');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec7').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec7').feature('pg1').set('noderef', 'pg7');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec8', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec8').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec8').set('heading', 'Mesh Plot 8');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec8').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec8').feature('pg1').set('noderef', 'pg8');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec9', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec9').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec9').set('heading', 'Mesh Plot 9');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec9').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec9').feature('pg1').set('noderef', 'pg9');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec10', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec10').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec10').set('heading', 'Mesh Plot 10');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec10').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec10').feature('pg1').set('noderef', 'pg10');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec11', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec11').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec11').set('heading', 'Mesh Plot 11');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec11').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec11').feature('pg1').set('noderef', 'pg11');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec12', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec12').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec12').set('heading', 'Mesh Plot 12');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec12').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec12').feature('pg1').set('noderef', 'pg12');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec13', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec13').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec13').set('heading', 'Mesh Plot 13');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec13').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec13').feature('pg1').set('noderef', 'pg13');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec14', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec14').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec14').set('heading', 'Mesh Plot 14');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec14').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec14').feature('pg1').set('noderef', 'pg14');
model.result.report('rpt1').feature('sec4').feature('sec3').create('sec15', 'Section');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec15').set('source', 'firstchild');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec15').set('heading', 'Mesh Plot 15');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec15').create('pg1', 'PlotGroup');
model.result.report('rpt1').feature('sec4').feature('sec3').feature('sec15').feature('pg1').set('noderef', 'pg15');
model.result.table.create('tbl1', 'Table');
model.result.numerical.create('pev1', 'EvalPoint');
model.result('pg4').run;
model.result.dataset.create('cpt1', 'CutPoint2D');
model.result.create('pg16', 'PlotGroup2D');
model.result('pg16').run;
model.result('pg16').run;
model.result('pg4').run;
model.result('pg4').feature.remove('ptgr1');
model.result('pg4').run;
model.result('pg4').feature.remove('lngr1');
model.result('pg4').run;

model.label('2D Geometry- thermoviscose 7.mph');

model.result('pg4').run;

model.label('2D Geometry- thermoviscose 7 - free triangular + BL.mph');

model.result('pg4').run;
model.result('pg5').run;

model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.result.create('pg17', 'PlotGroup2D');
model.result('pg17').run;
model.result.remove('pg17');
model.result('pg3').run;
model.result.duplicate('pg17', 'pg3');
model.result('pg17').run;
model.result('pg17').selection.geom('geom1', 2);
model.result('pg17').run;
model.result('pg17').selection.geom('geom1', 2);
model.result('pg17').selection.set([1]);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg17').feature('surf1').set('descr', 'Viscous power dissipation density');
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').setIndex('looplevel', 1, 0);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg17').feature('surf1').set('descr', 'Total thermoviscous power dissipation density');
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').stepNext(0);
model.result('pg17').run;
model.result('pg17').stepNext(0);
model.result('pg17').run;
model.result('pg17').stepPrevious(0);
model.result('pg17').run;
model.result('pg17').stepPrevious(0);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').setIndex('looplevel', 19, 0);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').feature('surf1').set('expr', 'ta.diss_therm');
model.result('pg17').feature('surf1').set('descr', 'Thermal power dissipation density');
model.result('pg17').run;
model.result('pg17').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg17').feature('surf1').set('descr', 'Viscous power dissipation density');
model.result('pg17').run;
model.result('pg4').run;
model.result.numerical.create('int1', 'IntSurface');
model.result.numerical('int1').set('intvolume', true);
model.result.numerical('int1').selection.set([1]);
model.result.numerical('int1').set('expr', {'ta.diss_visc'});
model.result.numerical('int1').set('descr', {'Viscous power dissipation density'});
model.result.numerical('int1').set('unit', {'W/m'});
model.result.table.create('tbl2', 'Table');
model.result.table('tbl2').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').setResult;
model.result('pg3').run;
model.result('pg4').run;
model.result('pg4').run;
model.result('pg4').run;
model.result.duplicate('pg18', 'pg4');
model.result('pg18').run;
model.result('pg18').run;
model.result('pg18').feature('glob1').setIndex('expr', 'ta.port1.P_out-ta.port1.P_in', 0);
model.result('pg18').run;
model.result('pg18').feature('glob1').setIndex('expr', 'ta.port1.P_in-ta.port1.P_out', 0);
model.result('pg18').run;
model.result.numerical('int1').set('expr', {'ta.diss_tot'});
model.result.numerical('int1').set('descr', {'Total thermoviscous power dissipation density'});
model.result.numerical('int1').set('unit', {'W/m'});
model.result.numerical('int1').selection.set([1 2]);
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').appendResult;
model.result('pg18').run;
model.result.numerical('int1').selection.set([1]);
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').appendResult;
model.result('pg17').run;
model.result('pg4').run;
model.result('pg17').run;
model.result('pg17').setIndex('looplevel', 1, 0);
model.result('pg17').run;
model.result('pg17').run;
model.result('pg17').run;
model.result.table('tbl2').clearTableData;
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').setResult;
model.result('pg4').run;
model.result('pg18').run;
model.result('pg17').run;
model.result('pg17').setIndex('looplevel', 19, 0);
model.result('pg17').run;
model.result.table('tbl2').clearTableData;
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').setResult;
model.result('pg18').run;
model.result.numerical('int1').selection.set([1 2]);
model.result.table('tbl2').clearTableData;
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').setResult;
model.result('pg18').run;

model.label('1 - Triangular + BL.mph');

model.result('pg18').run;
model.result.export.create('plot1', 'pg18', 'glob1', 'Plot');
model.result.export('plot1').set('filename', 'C:\Users\labo.GCH\Desktop\Niloofar\111111.csv');
model.result.export('plot1').run;
model.result('pg18').run;
model.result('pg18').feature('glob1').setIndex('expr', '1-(ta.port1.P_in-ta.port1.P_out)', 0);
model.result('pg18').run;
model.result('pg18').feature('glob1').set('expr', {'ta.port1.P_out'});
model.result('pg18').feature('glob1').set('descr', {'Power per unit length of outgoing mode'});
model.result('pg18').feature('glob1').set('unit', {'W/m'});
model.result('pg18').feature('glob1').setIndex('expr', '1-(ta.port1.P_out/ta.port1.P_in)', 0);
model.result('pg18').run;
model.result.export.create('plot2', 'pg18', 'glob1', 'Plot');
model.result.export('plot2').set('filename', 'C:\Users\labo.GCH\Desktop\Niloofar\1.csv');
model.result.export('plot2').run;

model.label('1 - Triangular + BL.mph');

model.result('pg4').run;
model.result('pg4').run;
model.result.export.create('plot3', 'pg4', 'glob1', 'Plot');
model.result.export('plot3').set('filename', 'C:\Users\labo.GCH\Desktop\Niloofar\1.csv');
model.result.export('plot3').run;
model.result('pg5').run;
model.result.remove('pg5');
model.result.remove('pg6');
model.result.remove('pg7');
model.result.remove('pg8');
model.result.remove('pg9');
model.result.remove('pg10');
model.result.remove('pg11');
model.result.remove('pg12');
model.result.remove('pg13');
model.result.remove('pg14');
model.result.remove('pg15');
model.result('pg16').run;

model.label('1 - Triangular + BL.mph');

model.result('pg18').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg1').feature('surf1').set('descr', 'Total thermoviscous power dissipation density');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('descractive', true);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepFirst(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepLast(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.Lp_t');
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepFirst(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg3').feature('surf1').set('descr', 'Total thermoviscous power dissipation density');
model.result('pg3').run;
model.result('pg2').run;
model.result('pg2').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg2').feature('surf1').set('descr', 'Total thermoviscous power dissipation density');
model.result('pg2').run;
model.result('pg2').feature('surf1').stepFirst(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepNext(0);
model.result('pg2').run;
model.result('pg2').feature('surf1').stepLast(0);
model.result('pg2').run;
model.result('pg3').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('colortable', 'Viridis');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepLast(0);
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('colortable', 'Rainbow');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('colortable', 'Rainbow');
model.result('pg2').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').stepFirst(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepNext(0);
model.result('pg3').run;
model.result('pg3').feature('surf1').stepLast(0);
model.result('pg3').run;
model.result.table('evl2').addRow([11.36749267578125 41.15534973144531 1.5333965785512948E-5], [0 0 0]);
model.result.table('evl2').addRow([13.612281799316406 60.360816955566406 2.9540629506097213E-6], [0 0 0]);
model.result.table('evl2').addRow([14.989471435546875 18.573795318603516 38.137833402876254], [0 0 0]);
model.result('pg1').run;
model.result('pg3').run;
model.result('pg3').feature('surf1').set('expr', 'ta.diss_therm');
model.result('pg3').feature('surf1').set('descr', 'Thermal power dissipation density');
model.result('pg3').run;
model.result.table('evl2').addRow([11.861844062805176 3.5969648361206055 3.1167984816398483E-4], [0 0 0]);
model.result.table('evl2').addRow([11.861844062805176 3.5969648361206055 3.1167984816398483E-4], [0 0 0]);
model.result.table('evl2').addRow([11.862325668334961 3.5911924839019775 3.2524681145331314E-4], [0 0 0]);
model.result('pg3').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg3').feature('surf1').set('descr', 'Viscous power dissipation density');
model.result('pg3').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepFirst(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepLast(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepPrevious(0);
model.result('pg1').run;
model.result.table('evl2').addRow([14.994377136230469 9.998492240905762 108.96769293285573], [0 0 0]);
model.result.table('evl2').addRow([12.995282173156738 8.596282005310059 102.32691189914799], [0 0 0]);
model.result.table('evl2').addRow([12.996161460876465 8.598078727722168 107.18452476595753], [0 0 0]);
model.result.table('evl2').addRow([12.996844291687012 7.60609769821167 100.60419824098692], [0 0 0]);
model.result.table('evl2').addRow([16.001680374145508 5.997054100036621 102.16338864193285], [0 0 0]);
model.result.table('evl2').addRow([16.00034523010254 5.0052876472473145 99.89903472951265], [0 0 0]);
model.result.table('evl2').addRow([13.99852466583252 12.601078987121582 48.109667001528585], [0 0 0]);

model.label('1 - Triangular + BL.mph');

model.result('pg1').run;
model.result.create('pg19', 'PlotGroup2D');
model.result('pg19').run;
model.result('pg19').create('surf1', 'Surface');
model.result('pg19').feature('surf1').set('expr', 'ta.diss_tot');
model.result('pg19').feature('surf1').set('descr', 'Total thermoviscous power dissipation density');
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result.table('evl2').addRow([15.001441955566406 10.005809783935547 109.38834209783482], [0 0 0]);
model.result.table('evl2').addRow([15.00073528289795 10.00368881225586 112.93789857228103], [0 0 0]);
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepNext(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepNext(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepNext(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepNext(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg3').run;
model.result('pg1').run;
model.result('pg19').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg19').run;
model.result('pg1').run;
model.result('pg19').run;

model.label('1 - Triangular + BL.mph');

model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepPrevious(0);
model.result('pg19').run;
model.result('pg19').feature('surf1').stepNext(0);
model.result('pg19').run;

model.label('1 - Triangular + BL.mph');

model.result('pg19').run;
model.result('pg18').run;

model.label('1 - Triangular + BL.mph');

model.param.set('f_max', '2000 [Hz]');
model.param.set('c', '343 [m/s]');
model.param.set('lambda', 'c/f_max');
model.param.set('ro', '1.2 [kg/m^3]');
model.param.set('mu', '1.81e-05[Pa*s]');
model.param.set('omega', '2*pi*f_max');
model.param.set('d_visc', 'sqrt(2*mu/(omega0*ro))');
model.param.rename('omega', 'omega0');
model.param.set('kappa', '0.025[W/(m*K)]');
model.param.set('d_therm', 'sqrt(2*kappa/(omega0*ro*');
model.param.set('Cp', '1[kJ/(kg*K)]');
model.param.set('d_therm', 'sqrt(2*kappa/(omega0*ro*Cp))');

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('inittype', 'blhmin');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blhmin', 'd_visc/8');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('trimmaxangle', 40);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('trimmaxangle', 50);
model.component('comp1').mesh('mesh1').feature('bl1').set('splitangle', 210);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('splitangle', 240);
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 70);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg20', 'PlotGroup2D');
model.result('pg20').label('Mesh Plot 20');
model.result('pg20').set('data', 'mesh1');
model.result('pg20').set('inherithide', true);
model.result('pg20').set('showlegendsmaxmin', true);
model.result('pg20').create('mesh1', 'Mesh');
model.result('pg20').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg20').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg20').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg20').run;

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.3);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg21', 'PlotGroup2D');
model.result('pg21').label('Mesh Plot 21');
model.result('pg21').set('data', 'mesh1');
model.result('pg21').set('inherithide', true);
model.result('pg21').set('showlegendsmaxmin', true);
model.result('pg21').create('mesh1', 'Mesh');
model.result('pg21').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg21').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg21').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg21').run;

model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.001);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').active(false);
model.component('comp1').mesh('mesh1').feature('bl1').active(true);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;

model.component('comp1').physics.create('acpr', 'PressureAcoustics', 'geom1');

model.study('std1').feature('freq').setSolveFor('/physics/acpr', true);

model.component('comp1').physics('acpr').selection.set([2]);

model.component('comp1').multiphysics.create('atb1', 'AcousticThermoacousticBoundary', 1);
model.component('comp1').multiphysics('atb1').selection.all;
model.component('comp1').multiphysics('atb1').selection.set([]);

model.component('comp1').physics('ta').selection.set([1]);
model.component('comp1').physics('ta').feature('wall1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79]);

model.component('comp1').multiphysics('atb1').selection.set([31]);

model.component('comp1').physics('acpr').feature.copy('port1', 'ta/port1');
model.component('comp1').physics('ta').feature.remove('port1');
model.component('comp1').physics('acpr').feature.move('port1', 3);

model.component('comp1').mesh('mesh1').feature('ftri1').selection.remaining;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([2]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1 2]);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', '0.1/2');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1.5);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.001);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 2);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', '0.0005');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.005);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.5);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1 2]);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.01);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 9);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hauto', 1);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('custom', true);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.1);
model.component('comp1').mesh('mesh1').run('size');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.5);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.2);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.3);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.2);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.2);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run('bl1');

model.result.create('pg22', 'PlotGroup2D');
model.result('pg22').label('Mesh Plot 22');
model.result('pg22').set('data', 'mesh1');
model.result('pg22').set('inherithide', true);
model.result('pg22').set('showlegendsmaxmin', true);
model.result('pg22').create('mesh1', 'Mesh');
model.result('pg22').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg22').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg22').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg22').run;

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.3);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.6);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.5);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.15);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.3);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 50);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 70);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('splitangle', 210);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('splitangle', 240);
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 40);
model.component('comp1').mesh('mesh1').run('bl1');

model.result('pg22').run;

model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.4);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.3);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.2);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.2);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.3);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.35);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.39);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.35);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxiter', 6);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxiter', 10);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxdepth', 10);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxiter', 20);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxiter', 4);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxdepth', 50);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothmaxdepth', 6);
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').set('smoothtransition', false);
model.component('comp1').mesh('mesh1').run('bl1');

model.result('pg22').run;

model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').selection.set([1 2]);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmin', 0.2);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 1);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1 2]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').selection.set([1]);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', false);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.2);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').create('ftri2', 'FreeTri');
model.component('comp1').mesh('mesh1').run('ftri2');
model.component('comp1').mesh('mesh1').feature('ftri2').create('size1', 'Size');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 9);
model.component('comp1').mesh('mesh1').run('ftri2');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 7);
model.component('comp1').mesh('mesh1').run('ftri2');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 5);
model.component('comp1').mesh('mesh1').run('ftri2');

model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').create('pol1', 'Polygon');
model.component('comp1').geom('geom1').feature('pol1').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol1').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol1').set('table', [0 230; 28 230]);
model.component('comp1').geom('geom1').run('pol1');
model.component('comp1').geom('geom1').run('pol1');
model.component('comp1').geom('geom1').run('pol1');
model.component('comp1').geom('geom1').runPre('fin');
model.component('comp1').geom('geom1').run('pol1');
model.component('comp1').geom('geom1').run('pol1');
model.component('comp1').geom('geom1').create('pol2', 'Polygon');
model.component('comp1').geom('geom1').feature('pol2').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol2').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol2').set('table', [0 210; 28 210]);
model.component('comp1').geom('geom1').run('pol2');
model.component('comp1').geom('geom1').run('pol2');
model.component('comp1').geom('geom1').create('pol3', 'Polygon');
model.component('comp1').geom('geom1').feature('pol3').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol3').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol3').set('table', [0 190; 28 190]);
model.component('comp1').geom('geom1').run('pol3');
model.component('comp1').geom('geom1').run('pol3');
model.component('comp1').geom('geom1').create('pol4', 'Polygon');
model.component('comp1').geom('geom1').feature('pol4').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol4').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol4').set('table', [0 170; 28 170]);
model.component('comp1').geom('geom1').run('pol4');
model.component('comp1').geom('geom1').run('pol4');
model.component('comp1').geom('geom1').create('pol5', 'Polygon');
model.component('comp1').geom('geom1').feature('pol5').set('type', 'open');
model.component('comp1').geom('geom1').feature('pol5').set('source', 'table');
model.component('comp1').geom('geom1').feature('pol5').set('table', [0 150; 28 150]);
model.component('comp1').geom('geom1').run('pol5');

model.component('comp1').probe.create('point1', 'Point');

model.component('comp1').geom('geom1').run;

model.component('comp1').probe('point1').selection.set([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88]);
model.component('comp1').probe('point1').genResult('sol1');

model.result.numerical('pev2').set('table', 'tbl3');
model.result.numerical('pev2').set('innerinput', 'all');
model.result.numerical('pev2').set('outerinput', 'all');
model.result.numerical('pev2').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe('point1').selection.set([26]);
model.component('comp1').probe('point1').genResult('sol1');

model.result.numerical('pev2').set('table', 'tbl3');
model.result.numerical('pev2').set('innerinput', 'all');
model.result.numerical('pev2').set('outerinput', 'all');
model.result.numerical('pev2').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe.create('point2', 'Point');
model.component('comp1').probe('point2').selection.set([25]);
model.component('comp1').probe('point2').genResult('sol1');

model.result.numerical('pev3').set('table', 'tbl3');
model.result.numerical('pev3').set('innerinput', 'all');
model.result.numerical('pev3').set('outerinput', 'all');
model.result.numerical('pev3').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe.create('point3', 'Point');
model.component('comp1').probe('point3').selection.set([24]);
model.component('comp1').probe('point3').genResult('sol1');

model.result.numerical('pev4').set('table', 'tbl3');
model.result.numerical('pev4').set('innerinput', 'all');
model.result.numerical('pev4').set('outerinput', 'all');
model.result.numerical('pev4').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe.create('point4', 'Point');
model.component('comp1').probe('point4').selection.set([23]);
model.component('comp1').probe('point4').genResult('sol1');

model.result.numerical('pev5').set('table', 'tbl3');
model.result.numerical('pev5').set('innerinput', 'all');
model.result.numerical('pev5').set('outerinput', 'all');
model.result.numerical('pev5').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe.create('point5', 'Point');
model.component('comp1').probe('point5').selection.set([22]);
model.component('comp1').probe('point5').genResult('sol1');

model.result.numerical('pev6').set('table', 'tbl3');
model.result.numerical('pev6').set('innerinput', 'all');
model.result.numerical('pev6').set('outerinput', 'all');
model.result.numerical('pev6').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe.create('point6', 'Point');
model.component('comp1').probe('point6').selection.set([21]);
model.component('comp1').probe('point6').genResult('sol1');

model.result.numerical('pev7').set('table', 'tbl3');
model.result.numerical('pev7').set('innerinput', 'all');
model.result.numerical('pev7').set('outerinput', 'all');
model.result.numerical('pev7').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').mesh('mesh1').run;

model.param.set('f_max', '3000 [Hz]');

model.component('comp1').mesh('mesh1').run;

model.result('pg22').run;

model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.3);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 30);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 20);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').set('splitdivangle', 70);
model.component('comp1').mesh('mesh1').run;

model.result('pg22').run;

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.component('comp1').physics('ta').feature.copy('port1', 'acpr/port1');
model.component('comp1').physics('acpr').feature.remove('port1');
model.component('comp1').physics('ta').feature.move('port1', 3);
model.component('comp1').physics('acpr').feature.copy('port1', 'ta/port1');
model.component('comp1').physics('ta').feature.remove('port1');
model.component('comp1').physics('acpr').feature.move('port1', 3);
model.component('comp1').physics('acpr').feature('port1').set('PortType', 'UserDefined');

model.label('1 - Triangular + BL.mph');

model.component('comp1').physics('acpr').feature('port1').set('PortType', 'Slit');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.component('comp1').physics('acpr').feature('port1').set('PortType', 'Slit');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.sol('sol1').runAll;

model.result('pg1').run;

model.label('1 - Triangular + BL.mph');

model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').stepPrevious(0);
model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 46, 0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('colorscalemode', 'logarithmic');
model.result('pg1').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_therm');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_visc/ta.diss_therm');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg1').run;

model.label('1 - Triangular + BL.mph');

model.result('pg1').run;
model.result.numerical.create('av1', 'AvLine');
model.result.numerical('av1').set('intsurface', true);
model.result.numerical('av1').selection.set([41]);
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*e_12)-(p/point3))/((p/point3)-exp(j*ta.omega/acpr.c*e_12))*exp(2*j*ta.omega/acpr.c*(L1+e_12)))^2', 0);

model.param.set('L1', '180[mm]', 'space between micro 1 and sample');
model.param.set('e12', '20[mm]');
model.param.descr('e12', 'space between micro 1 and 2');

model.result.table.create('tbl4', 'Table');
model.result.table('tbl4').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl4');
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*e_12)-(p/))/((p/point3)-exp(j*ta.omega/acpr.c*e_12))*exp(2*j*ta.omega/acpr.c*(L1+e_12)))^2', 0);
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*e_12)-(p/point1))/((p/point1)-exp(j*ta.omega/acpr.c*e_12))*exp(2*j*ta.omega/acpr.c*(L1+e_12)))^2', 0);

model.param.rename('e12', 'e_12');

model.result.table.create('tbl5', 'Table');
model.result.table('tbl5').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl5');
model.result.table.create('tbl6', 'Table');
model.result.table('tbl6').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl6');

model.param.set('e_12', '20 [mm]');
model.param.set('L1', '180 [mm]');

model.result.table.create('tbl7', 'Table');
model.result.table('tbl7').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl6');
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(p/point1))/((p/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(L1+e_12)))^2', 0);
model.result.table.create('tbl8', 'Table');
model.result.table('tbl8').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl8');
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(p/point1))/((p/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(L1+0.02)))^2', 0);
model.result.table.create('tbl9', 'Table');
model.result.table('tbl9').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl9');
model.result.numerical('av1').selection.set([]);
model.result.table.create('tbl10', 'Table');
model.result.table('tbl10').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl10');
model.result.numerical('av1').setResult;
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(point2/point1))/((point2/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(L1+0.02)))^2', 0);
model.result.table.create('tbl11', 'Table');
model.result.table('tbl11').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl11');
model.result.numerical('av1').setResult;
model.result.create('pg24', 'PlotGroup1D');
model.result('pg24').run;
model.result('pg24').create('glob1', 'Global');
model.result('pg24').feature('glob1').set('markerpos', 'datapoints');
model.result('pg24').feature('glob1').set('linewidth', 'preference');
model.result('pg24').feature('glob1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(point2/point1))/((point2/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(L1+0.02)))^2', 0);
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').feature('glob1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(point2/point1))/((point2/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(0.18+0.02)))^2', 0);
model.result('pg24').run;
model.result.numerical('av1').selection.set([41]);
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(point2/point1))/((point2/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(0.18+0.02)))^2', 0);
model.result.numerical('av1').set('table', 'tbl11');
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').run;
model.result('pg24').run;
model.result.table.create('tbl12', 'Table');
model.result.table('tbl12').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl11');
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*0.02)-(p/point1))/((p/point1)-exp(j*ta.omega/acpr.c*0.02))*exp(2*j*ta.omega/acpr.c*(0.18+0.02)))^2', 0);
model.result.table.create('tbl13', 'Table');
model.result.table('tbl13').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl13');
model.result.table.create('tbl14', 'Table');
model.result.table('tbl14').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl11');

model.label('1 - Triangular + BL.mph');

model.component('comp1').probe('point1').set('expr', 'acpr.p_t');
model.component('comp1').probe('point1').set('descr', 'Total acoustic pressure');
model.component('comp1').probe('point2').set('expr', 'acpr.p_t');
model.component('comp1').probe('point3').set('expr', 'acpr.p_t');
model.component('comp1').probe('point4').set('expr', 'acpr.p_t');
model.component('comp1').probe('point5').set('expr', 'acpr.p_t');
model.component('comp1').probe('point6').set('expr', 'acpr.p_t');
model.component('comp1').probe('point6').genResult('sol1');

model.result.numerical('pev7').set('table', 'tbl3');
model.result.numerical('pev7').set('innerinput', 'all');
model.result.numerical('pev7').set('outerinput', 'all');
model.result.numerical('pev7').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;
model.result.table.create('tbl15', 'Table');
model.result.table('tbl15').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl15');

model.sol('sol1').updateSolution;

model.result('pg1').run;
model.result.table.create('tbl16', 'Table');
model.result.table('tbl16').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl16');
model.result.numerical('av1').setResult;
model.result.create('pg25', 'PlotGroup1D');
model.result('pg25').set('data', 'none');
model.result('pg25').create('tblp1', 'Table');
model.result('pg25').feature('tblp1').set('source', 'table');
model.result('pg25').feature('tblp1').set('table', 'tbl16');
model.result('pg25').feature('tblp1').set('linewidth', 'preference');
model.result('pg25').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg25').run;

model.label('1 - Triangular + BL.mph');

model.result('pg25').run;
model.result.numerical('av1').selection.set([35]);
model.result.numerical('av1').setIndex('expr', '1-abs((exp(-j*ta.omega/acpr.c*e_12)-(p/point4))/((p/point4)-exp(j*ta.omega/acpr.c*e_12))*exp(2*j*ta.omega/acpr.c*(L1+e_12)))^2', 0);

model.param.set('L1', '120 [mm]');

model.sol('sol1').updateSolution;

model.result('pg1').run;
model.result.table.create('tbl17', 'Table');
model.result.table('tbl17').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl17');
model.result.numerical('av1').setResult;
model.result.create('pg26', 'PlotGroup1D');
model.result('pg26').set('data', 'none');
model.result('pg26').create('tblp1', 'Table');
model.result('pg26').feature('tblp1').set('source', 'table');
model.result('pg26').feature('tblp1').set('table', 'tbl17');
model.result('pg26').feature('tblp1').set('linewidth', 'preference');
model.result('pg26').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg26').run;
model.result('pg25').run;
model.result('pg25').run;
model.result('pg25').run;
model.result('pg26').run;

model.component('comp1').probe('point1').set('expr', 'p');
model.component('comp1').probe('point1').genResult('sol1');

model.result.numerical('pev2').set('table', 'tbl3');
model.result.numerical('pev2').set('innerinput', 'all');
model.result.numerical('pev2').set('outerinput', 'all');
model.result.numerical('pev2').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe('point2').set('expr', 'p');
model.component('comp1').probe('point2').genResult('sol1');

model.result.numerical('pev3').set('table', 'tbl3');
model.result.numerical('pev3').set('innerinput', 'all');
model.result.numerical('pev3').set('outerinput', 'all');
model.result.numerical('pev3').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.component('comp1').probe('point4').set('expr', 'p');
model.component('comp1').probe('point4').genResult('sol1');

model.result.numerical('pev5').set('table', 'tbl3');
model.result.numerical('pev5').set('innerinput', 'all');
model.result.numerical('pev5').set('outerinput', 'all');
model.result.numerical('pev5').setResult;
model.result('pg23').feature('tblp1').set('plotcolumns', [2]);
model.result('pg23').feature('tblp1').set('xaxisdata', 'auto');
model.result('pg23').run;

model.sol('sol1').updateSolution;

model.result('pg1').run;
model.result.table.create('tbl18', 'Table');
model.result.table('tbl18').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl18');
model.result.numerical('av1').setResult;
model.result.create('pg27', 'PlotGroup1D');
model.result('pg27').set('data', 'none');
model.result('pg27').create('tblp1', 'Table');
model.result('pg27').feature('tblp1').set('source', 'table');
model.result('pg27').feature('tblp1').set('table', 'tbl18');
model.result('pg27').feature('tblp1').set('linewidth', 'preference');
model.result('pg27').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg27').run;
model.result.create('pg28', 'PlotGroup2D');
model.result('pg28').label('Mesh Plot 28');
model.result('pg28').set('data', 'mesh1');
model.result('pg28').set('inherithide', true);
model.result('pg28').set('showlegendsmaxmin', true);
model.result('pg28').create('mesh1', 'Mesh');
model.result('pg28').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg28').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg28').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg28').run;

model.component('comp1').mesh('mesh1').feature('ftri1').feature('size1').set('hmax', 0.4);
model.component('comp1').mesh('mesh1').run('ftri1');
model.component('comp1').mesh('mesh1').run('bl1');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.4);
model.component('comp1').mesh('mesh1').run;
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp').set('blstretch', 1.5);
model.component('comp1').mesh('mesh1').run;

model.result.create('pg29', 'PlotGroup2D');
model.result('pg29').label('Mesh Plot 29');
model.result('pg29').set('data', 'mesh1');
model.result('pg29').set('inherithide', true);
model.result('pg29').set('showlegendsmaxmin', true);
model.result('pg29').create('mesh1', 'Mesh');
model.result('pg29').feature('mesh1').set('colortable', 'TrafficFlow');
model.result('pg29').feature('mesh1').set('colortabletrans', 'nonlinear');
model.result('pg29').feature('mesh1').set('nonlinearcolortablerev', true);
model.result('pg29').run;

model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 3);
model.component('comp1').mesh('mesh1').run('ftri2');
model.component('comp1').mesh('mesh1').feature('ftri2').feature('size1').set('hauto', 2);
model.component('comp1').mesh('mesh1').run('ftri2');
model.component('comp1').mesh('mesh1').run;

model.component('comp1').physics('acpr').feature('port1').set('PortType', 'UserDefined');
model.component('comp1').physics('ta').prop('EquationSettings').set('AdiabaticFormulation', false);
model.component('comp1').physics('acpr').feature('port1').active(false);
model.component('comp1').physics('ta').create('port1', 'Port', 1);
model.component('comp1').physics('ta').feature('port1').set('PortType', 'PlaneWave');
model.component('comp1').physics('ta').feature.remove('port1');
model.component('comp1').physics('acpr').feature('port1').active(true);

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.component('comp1').physics('acpr').feature('port1').set('p', 1);
model.component('comp1').physics('ta').create('port1', 'Port', 1);
model.component('comp1').physics('ta').feature('port1').set('PortType', 'Slit');
model.component('comp1').physics('ta').feature.remove('port1');
model.component('comp1').physics('acpr').feature('port1').set('PortType', 'Slit');
model.component('comp1').physics('acpr').create('pc1', 'PeriodicCondition', 1);
model.component('comp1').physics('acpr').feature('port1').active(false);
model.component('comp1').physics('acpr').feature('pc1').selection.set([42]);
model.component('comp1').physics('acpr').feature('pc1').set('PeriodicType', 'Floquet');
model.component('comp1').physics('acpr').feature('pc1').active(false);
model.component('comp1').physics('acpr').feature.remove('pc1');
model.component('comp1').physics('acpr').feature('port1').active(true);
model.component('comp1').physics('acpr').feature('port1').set('PortType', 'UserDefined');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result('pg1').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg2').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result('pg1').feature('surf1').stepNext(0);
model.result('pg1').run;
model.result.table.create('tbl19', 'Table');
model.result.table('tbl19').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl19');
model.result.numerical('av1').setResult;
model.result.create('pg30', 'PlotGroup1D');
model.result('pg30').set('data', 'none');
model.result('pg30').create('tblp1', 'Table');
model.result('pg30').feature('tblp1').set('source', 'table');
model.result('pg30').feature('tblp1').set('table', 'tbl19');
model.result('pg30').feature('tblp1').set('linewidth', 'preference');
model.result('pg30').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg30').run;

model.component('comp1').physics('acpr').feature('port1').set('PortType', 'Slit');

model.sol('sol1').study('std1');

model.study('std1').feature('freq').set('notlistsolnum', 1);
model.study('std1').feature('freq').set('notsolnum', 'auto');
model.study('std1').feature('freq').set('listsolnum', 1);
model.study('std1').feature('freq').set('solnum', 'auto');

model.sol('sol1').feature.remove('s1');
model.sol('sol1').feature.remove('v1');
model.sol('sol1').feature.remove('st1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').feature('st1').set('study', 'std1');
model.sol('sol1').feature('st1').set('studystep', 'freq');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').feature('v1').set('control', 'freq');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').set('stol', 0.001);
model.sol('sol1').feature('s1').create('p1', 'Parametric');
model.sol('sol1').feature('s1').feature.remove('pDef');
model.sol('sol1').feature('s1').feature('p1').set('pname', {'freq'});
model.sol('sol1').feature('s1').feature('p1').set('plistarr', {'range(500,20,3000)'});
model.sol('sol1').feature('s1').feature('p1').set('punit', {'Hz'});
model.sol('sol1').feature('s1').feature('p1').set('pcontinuationmode', 'no');
model.sol('sol1').feature('s1').feature('p1').set('preusesol', 'auto');
model.sol('sol1').feature('s1').feature('p1').set('pdistrib', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plot', 'off');
model.sol('sol1').feature('s1').feature('p1').set('plotgroup', 'pg1');
model.sol('sol1').feature('s1').feature('p1').set('probesel', 'all');
model.sol('sol1').feature('s1').feature('p1').set('probes', {'point1' 'point2' 'point3' 'point4' 'point5' 'point6'});
model.sol('sol1').feature('s1').feature('p1').set('control', 'freq');
model.sol('sol1').feature('s1').set('linpmethod', 'sol');
model.sol('sol1').feature('s1').set('linpsol', 'zero');
model.sol('sol1').feature('s1').set('control', 'freq');
model.sol('sol1').feature('s1').feature('aDef').set('complexfun', true);
model.sol('sol1').feature('s1').feature('aDef').set('cachepattern', false);
model.sol('sol1').feature('s1').feature('aDef').set('matherr', true);
model.sol('sol1').feature('s1').feature('aDef').set('blocksizeactive', false);
model.sol('sol1').feature('s1').create('seDef', 'Segregated');
model.sol('sol1').feature('s1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('s1').create('d1', 'Direct');
model.sol('sol1').feature('s1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('s1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('s1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('s1').feature.remove('fcDef');
model.sol('sol1').feature('s1').feature.remove('seDef');
model.sol('sol1').attach('std1');

model.component('comp1').probe('point1').genResult('none');
model.component('comp1').probe('point2').genResult('none');
model.component('comp1').probe('point3').genResult('none');
model.component('comp1').probe('point4').genResult('none');
model.component('comp1').probe('point5').genResult('none');
model.component('comp1').probe('point6').genResult('none');

model.sol('sol1').runAll;

model.result('pg1').run;
model.result.table.create('tbl20', 'Table');
model.result.table('tbl20').comments('Line Average 1');
model.result.numerical('av1').set('table', 'tbl20');
model.result.numerical('av1').setResult;
model.result.create('pg31', 'PlotGroup1D');
model.result('pg31').set('data', 'none');
model.result('pg31').create('tblp1', 'Table');
model.result('pg31').feature('tblp1').set('source', 'table');
model.result('pg31').feature('tblp1').set('table', 'tbl20');
model.result('pg31').feature('tblp1').set('linewidth', 'preference');
model.result('pg31').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg31').run;

model.label('1 - Triangular + BL_coarser.mph');

model.result('pg31').run;
model.result.numerical('int1').setIndex('expr', 'acpr.port1.P_in-acpr.port1.P_out', 1);
model.result.numerical('int1').set('table', 'tbl2');
model.result.numerical('int1').selection.set([1]);
model.result.table.create('tbl21', 'Table');
model.result.table('tbl21').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl21');
model.result.numerical('int1').setResult;
model.result.numerical('int1').selection.set([1 2 3]);
model.result.numerical('int1').set('table', 'tbl21');
model.result.numerical('int1').selection.set([1]);
model.result.create('pg32', 'PlotGroup1D');
model.result('pg32').set('data', 'none');
model.result('pg32').create('tblp1', 'Table');
model.result('pg32').feature('tblp1').set('source', 'table');
model.result('pg32').feature('tblp1').set('table', 'tbl21');
model.result('pg32').feature('tblp1').set('linewidth', 'preference');
model.result('pg32').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg32').run;
model.result('pg32').set('ylog', true);
model.result('pg32').set('showmanualgrid', true);
model.result('pg32').set('showxspacing', true);
model.result('pg32').set('showyspacing', false);
model.result('pg32').set('showsecyspacing', false);
model.result('pg32').set('showsecyextra', false);
model.result('pg32').set('xlog', true);
model.result('pg32').set('showmanualgrid', false);
model.result('pg32').set('showxspacing', false);
model.result('pg32').set('showyspacing', false);
model.result('pg32').set('showsecyspacing', false);
model.result('pg32').set('showsecyextra', false);
model.result('pg32').set('ylog', false);
model.result('pg32').set('showmanualgrid', true);
model.result('pg32').set('showxspacing', false);
model.result('pg32').set('showyspacing', true);
model.result('pg32').set('showsecyspacing', false);
model.result('pg32').set('showsecyextra', false);
model.result('pg32').set('xlog', false);
model.result('pg32').set('showmanualgrid', true);
model.result('pg32').set('showxspacing', true);
model.result('pg32').set('showyspacing', true);
model.result('pg32').set('showsecyspacing', false);
model.result('pg32').set('showsecyextra', false);
model.result('pg32').feature('tblp1').set('legend', true);
model.result('pg32').run;
model.result.numerical('int1').setIndex('expr', 'acpr.port1.P_in', 1);
model.result.numerical('int1').set('table', 'tbl21');
model.result.numerical('int1').appendResult;
model.result('pg17').run;
model.result.numerical('int1').setIndex('expr', 'acpr.port1.P_in-acpr.port1.P_out', 1);
model.result.table.create('tbl22', 'Table');
model.result.table('tbl22').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl22');
model.result.numerical('int1').setResult;
model.result.create('pg33', 'PlotGroup1D');
model.result('pg33').set('data', 'none');
model.result('pg33').create('tblp1', 'Table');
model.result('pg33').feature('tblp1').set('source', 'table');
model.result('pg33').feature('tblp1').set('table', 'tbl22');
model.result('pg33').feature('tblp1').set('linewidth', 'preference');
model.result('pg33').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg33').run;
model.result('pg33').feature('tblp1').set('legend', true);
model.result.numerical('int1').setIndex('expr', 'acpr.P_in-acpr.P_out', 1);
model.result.numerical('int1').set('table', 'tbl22');
model.result.numerical('int1').setIndex('expr', 'acpr.P_in_1-acpr.P_out_11', 1);
model.result.table.create('tbl23', 'Table');
model.result.table('tbl23').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl23');
model.result.numerical('int1').setResult;
model.result.numerical('int1').setIndex('expr', '', 1);
model.result.table.create('tbl24', 'Table');
model.result.table('tbl24').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl24');
model.result.numerical('int1').setResult;
model.result.numerical('int1').set('expr', {'acpr.port1.P_in'});
model.result.numerical('int1').set('descr', {'Power per unit length of incident mode'});
model.result.numerical('int1').set('unit', {'W*m'});
model.result.numerical('int1').setIndex('expr', 'acpr.port1.P_in-acpr.port1.P_out', 0);
model.result.numerical('int1').set('table', 'tbl24');
model.result.numerical('int1').appendResult;
model.result.numerical('int1').set('expr', {'ta.diss_tot'});
model.result.numerical('int1').set('descr', {'Total thermoviscous power dissipation density'});
model.result.numerical('int1').set('unit', {'W/m'});
model.result.numerical('int1').set('table', 'tbl24');
model.result.numerical('int1').appendResult;
model.result.table.create('tbl25', 'Table');
model.result.table('tbl25').comments('Surface Integration 1');
model.result.numerical('int1').set('table', 'tbl25');
model.result.numerical('int1').setResult;
model.result.numerical.create('gev1', 'EvalGlobal');
model.result.numerical('gev1').setIndex('expr', 'acpr.port1.P_in-acpr.port1.P_out', 0);
model.result.table.create('tbl26', 'Table');
model.result.table('tbl26').comments('Global Evaluation 1');
model.result.numerical('gev1').set('table', 'tbl26');
model.result.numerical('gev1').setResult;
model.result('pg27').run;
model.result('pg31').run;
model.result.table('tbl25').save('C:\Users\labo.GCH\Desktop\elissa\total thermoviscous power.txt');
model.result.table('tbl26').save('C:\Users\labo.GCH\Desktop\elissa\difference_power.txt');
model.result.create('pg34', 'PlotGroup1D');
model.result('pg34').set('data', 'none');
model.result('pg34').create('tblp1', 'Table');
model.result('pg34').feature('tblp1').set('source', 'table');
model.result('pg34').feature('tblp1').set('table', 'tbl26');
model.result('pg34').feature('tblp1').set('linewidth', 'preference');
model.result('pg34').feature('tblp1').set('markerpos', 'datapoints');
model.result('pg34').run;
model.result('pg34').run;
model.result.numerical('int1').set('table', 'tbl25');
model.result.numerical('int1').appendResult;

model.label('1 - Triangular + BL_coarser.mph');

model.result('pg26').run;
model.result('pg26').run;
model.result('pg26').run;
model.result.create('pg35', 'PlotGroup1D');
model.result('pg35').run;
model.result('pg35').create('glob1', 'Global');
model.result('pg35').feature('glob1').set('markerpos', 'datapoints');
model.result('pg35').feature('glob1').set('linewidth', 'preference');
model.result('pg35').feature('glob1').setIndex('expr', '1-', 0);
model.result('pg35').feature('glob1').set('expr', {'acpr.port1.P_out'});
model.result('pg35').feature('glob1').set('descr', {'Power per unit length of outgoing mode'});
model.result('pg35').feature('glob1').set('unit', {'W/m'});
model.result('pg35').feature('glob1').setIndex('expr', '1-(acpr.port1.P_out/acpr.port1.P_in)^2', 0);
model.result('pg35').run;
model.result('pg31').run;

model.label('1 - Triangular + BL_coarser.mph');

model.result('pg1').run;
model.result('pg1').setIndex('looplevel', 17, 0);
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_therm');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangedataactive', true);
model.result('pg1').feature('surf1').set('rangedatamin', 8.875421589719067E-8);
model.result('pg1').feature('surf1').set('rangedatamax', '10e2');
model.result('pg1').run;
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangedataactive', false);
model.result('pg1').feature('surf1').set('rangecoloractive', true);
model.result('pg1').feature('surf1').set('rangecolormin', 8.875421589719067E-12);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangecolormin', '1E-12');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangecolormax', 100);
model.result('pg1').run;
model.result('pg1').feature('surf1').set('rangecolormin', '1E-8');
model.result('pg1').run;
model.result('pg1').feature('surf1').set('expr', 'ta.diss_visc');
model.result('pg1').feature('surf1').set('rangecoloractive', false);
model.result('pg1').run;

model.label('1 - Triangular + BL_coarser.mph');

model.result('pg1').run;
model.result('pg35').run;

model.sol('sol1').clearSolutionData;

model.label('1 - Triangular + BL_coarser clear solution[1].mph');
model.label('Solution Niloofar.mph');

model.component('comp1').geom('geom1').export.setType('nativeascii');
model.component('comp1').geom('geom1').export('C:\Users\lucas.barbier\OneDrive - ETS\CRIAQ-REAR\Maitrise LB\COMSOL\niloofar.mphtxt');
model.component('comp1').geom('geom1').feature.clear;
model.component('comp1').geom('geom1').nodeGroup.clear;
model.component('comp1').geom('geom1').create('imp1', 'Import');
model.component('comp1').geom('geom1').insertFile('C:\Users\lucas.barbier\OneDrive - ETS\CRIAQ-REAR\Maitrise LB\COMSOL\Solution Niloofar.mph', 'geom1');
model.component('comp1').geom('geom1').run('');
model.component('comp1').geom('geom1').feature.remove('imp1');
model.component('comp1').geom('geom1').run('r1');
model.component('comp1').geom('geom1').run('r8');
model.component('comp1').geom('geom1').run('r19');
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').feature.remove('pol1');
model.component('comp1').geom('geom1').feature.remove('pol2');
model.component('comp1').geom('geom1').feature.remove('pol5');
model.component('comp1').geom('geom1').feature.remove('pol4');
model.component('comp1').geom('geom1').feature.remove('pol3');
model.component('comp1').geom('geom1').feature.remove('r20');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature.clear;
model.component('comp1').geom('geom1').nodeGroup.clear;

model.param.remove('a2');
model.param.remove('a3');
model.param.remove('a4');
model.param.remove('a5');
model.param.remove('a6');
model.param.remove('a7');
model.param.remove('a8');
model.param.remove('a9');
model.param.remove('b2');
model.param.remove('b3');
model.param.remove('b4');
model.param.remove('b5');
model.param.remove('b6');
model.param.remove('b7');
model.param.remove('b8');
model.param.remove('b9');
model.param.remove('Ha1');
model.param.remove('Ha2');
model.param.remove('Ha3');
model.param.remove('Ha4');
model.param.remove('Ha5');
model.param.remove('Ha6');
model.param.remove('Ha7');
model.param.remove('Ha8');
model.param.remove('Ha9');
model.param.remove('Hb1');
model.param.remove('Hb2');
model.param.remove('Hb3');
model.param.remove('Hb4');
model.param.remove('Hb5');
model.param.remove('Hb6');
model.param.remove('Hb7');
model.param.remove('Hb8');
model.param.remove('Hb9');
model.param.rename('ro', 'rho');
model.param.rename('lambda', 'lambda_min');
model.param.rename('omega0', 'omega_max');
model.param.set('d_visc', 'sqrt(2*mu/(omega_max*rho))');
model.param.set('d_therm', 'sqrt(2*kappa/(omega_max*rho*Cp))');
model.param.set('e_12', '30 [mm]');

model.component('comp1').geom('geom1').run;

model.variable.remove('var1');

model.param.set('omega_max', '2*pi*f_max');
model.param.remove('f_max');
model.param.remove('c');
model.param.remove('lambda_min');
model.param.remove('rho');
model.param.remove('mu');
model.param.remove('omega_max');
model.param.remove('d_visc');
model.param.remove('d_therm');
model.param.remove('kappa');
model.param.remove('Cp');
model.param.remove('L1');
model.param.create('par2');
model.param.move({'e_12'}, 'par2');
model.param.group.move('par2', 0);
model.param.group.remove('par2');
model.param.set('W', '30 [mm]');

model.component('comp1').geom('geom1').create('r1', 'Rectangle');

model.param.label('Solution');
model.param.descr('W', 'largeur');
model.param.descr('l', [native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'paisseur des plaques']);
model.param.descr('d', ['incr' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'ment']);
model.param.descr('m', [native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'paisseur 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're couche']);
model.param.descr('m', ['espace avant 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're plaque gauche']);
model.param.descr('n', ['espace avant 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're plaque gauche']);
model.param.descr('n', ['espace avant 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're plaque droit']);
model.param.descr('a1', ['longueur de la 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're plaque gauche']);
model.param.descr('b1', ['longueur de la 1' native2unicode(hex2dec({'00' 'e8'}), 'unicode') 're plaque droite']);
model.param.set('ed', 'n-l-m', [native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'paisseur de la couche de fluide pr' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'c' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'dent une plaque ' native2unicode(hex2dec({'00' 'e0'}), 'unicode') ' droite']);
model.param.set('eg', '2*m-n');
model.param.descr('eg', [native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'paisseur de la couche de fluide pr' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'c' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'dent une plaque ' native2unicode(hex2dec({'00' 'e0'}), 'unicode') ' droite']);
model.param.descr('eg', [native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'paisseur de la couche de fluide pr' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'c' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'dent une plaque ' native2unicode(hex2dec({'00' 'e0'}), 'unicode') ' gauche']);
model.param.remove('ed');
model.param.remove('eg');

model.component('comp1').geom('geom1').feature('r1').set('size', {'W' 'H'});
model.component('comp1').geom('geom1').feature('r1').set('pos', {'-W/2' '-H'});
model.component('comp1').geom('geom1').run('r1');
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').set('size', {'a1 + 0*d' 'l'});
model.component('comp1').geom('geom1').feature('r2').set('pos', {'-W/2' '-1*(m+l)'});
model.component('comp1').geom('geom1').run('r2');
model.component('comp1').geom('geom1').create('r3', 'Rectangle');
model.component('comp1').geom('geom1').feature('r3').set('size', {'b1+0*d' '1'});
model.component('comp1').geom('geom1').feature('r3').set('pos', {'0' 'W/2-(b1+0*d)'});
model.component('comp1').geom('geom1').feature('r3').setIndex('pos', '-(n+l) - 0*(m+l)', 0);
model.component('comp1').geom('geom1').feature('r3').set('size', {'b1+0*d' 'l'});
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').feature('r3').setIndex('pos', '-(n+l) - 0*(m+l)', 1);
model.component('comp1').geom('geom1').feature('r3').setIndex('pos', 'W/2-(b1+0*d)', 0);
model.component('comp1').geom('geom1').run('r3');
model.component('comp1').geom('geom1').feature.copy('r4', 'geom1/r2');
model.component('comp1').geom('geom1').feature('r4').set('size', {'a1 + 1*d' 'l'});
model.component('comp1').geom('geom1').feature('r4').set('pos', {'-W/2' '-2*(m+l)'});
model.component('comp1').geom('geom1').run('r4');
model.component('comp1').geom('geom1').feature.copy('r5', 'geom1/r3');
model.component('comp1').geom('geom1').feature('r5').set('size', {'b1+1*d' 'l'});
model.component('comp1').geom('geom1').feature('r5').setIndex('pos', 'W/2-(b1+1*d)', 0);
model.component('comp1').geom('geom1').feature('r5').setIndex('pos', '-(n+l) - 1*(m+l)', 1);
model.component('comp1').geom('geom1').run('r5');
model.component('comp1').geom('geom1').feature.copy('r6', 'geom1/r4');
model.component('comp1').geom('geom1').feature('r6').set('size', {'a1 + 2*d' 'l'});
model.component('comp1').geom('geom1').feature('r6').set('pos', {'-W/2' '-3*(m+l)'});
model.component('comp1').geom('geom1').run('r6');
model.component('comp1').geom('geom1').feature.copy('r7', 'geom1/r5');
model.component('comp1').geom('geom1').feature('r7').set('size', {'b1+2*d' 'l'});
model.component('comp1').geom('geom1').feature('r7').setIndex('pos', 'W/2-(b1+2*d)', 0);
model.component('comp1').geom('geom1').feature('r7').setIndex('pos', '-(n+l) - 2*(m+l)', 1);
model.component('comp1').geom('geom1').run('r7');
model.component('comp1').geom('geom1').feature.copy('r8', 'geom1/r6');
model.component('comp1').geom('geom1').feature('r8').set('size', {'a1 + 3*d' 'l'});
model.component('comp1').geom('geom1').feature('r8').set('pos', {'-W/2' '-4*(m+l)'});
model.component('comp1').geom('geom1').run('r8');
model.component('comp1').geom('geom1').feature.copy('r9', 'geom1/r7');
model.component('comp1').geom('geom1').feature('r9').set('size', {'b1+3*d' 'l'});
model.component('comp1').geom('geom1').feature('r9').setIndex('pos', 'W/2-(b1+3*d)', 0);
model.component('comp1').geom('geom1').feature('r9').setIndex('pos', '-(n+l) - 3*(m+l)', 1);
model.component('comp1').geom('geom1').run('r9');
model.component('comp1').geom('geom1').feature.copy('r10', 'geom1/r8');
model.component('comp1').geom('geom1').feature('r10').set('size', {'a1 + 4*d' 'l'});
model.component('comp1').geom('geom1').feature('r10').set('pos', {'-W/2' '-5*(m+l)'});
model.component('comp1').geom('geom1').run('r10');
model.component('comp1').geom('geom1').feature.copy('r11', 'geom1/r9');
model.component('comp1').geom('geom1').feature('r11').set('size', {'b1+4*d' 'l'});
model.component('comp1').geom('geom1').feature('r11').setIndex('pos', 'W/2-(b1+4*d)', 0);
model.component('comp1').geom('geom1').feature('r11').setIndex('pos', '-(n+l) - 4*(m+l)', 1);
model.component('comp1').geom('geom1').run('r11');
model.component('comp1').geom('geom1').feature.copy('r12', 'geom1/r10');
model.component('comp1').geom('geom1').feature('r12').set('size', {'a1 + 5*d' 'l'});
model.component('comp1').geom('geom1').feature('r12').set('pos', {'-W/2' '-6*(m+l)'});
model.component('comp1').geom('geom1').run('r12');
model.component('comp1').geom('geom1').feature.copy('r13', 'geom1/r11');
model.component('comp1').geom('geom1').feature('r13').set('size', {'b1+5*d' 'l'});
model.component('comp1').geom('geom1').feature('r13').setIndex('pos', 'W/2-(b1+5*d)', 0);
model.component('comp1').geom('geom1').feature('r13').setIndex('pos', '-(n+l) - 5*(m+l)', 1);
model.component('comp1').geom('geom1').run('r13');
model.component('comp1').geom('geom1').feature.copy('r14', 'geom1/r12');
model.component('comp1').geom('geom1').feature('r14').set('size', {'a1 + 6*d' 'l'});
model.component('comp1').geom('geom1').feature('r14').set('pos', {'-W/2' '-7*(m+l)'});
model.component('comp1').geom('geom1').run('r14');
model.component('comp1').geom('geom1').feature.copy('r15', 'geom1/r13');
model.component('comp1').geom('geom1').feature('r15').set('size', {'b1+6*d' 'l'});
model.component('comp1').geom('geom1').feature('r15').setIndex('pos', 'W/2-(b1+6*d)', 0);
model.component('comp1').geom('geom1').feature('r15').setIndex('pos', '-(n+l) - 6*(m+l)', 1);
model.component('comp1').geom('geom1').run('r15');
model.component('comp1').geom('geom1').feature.copy('r16', 'geom1/r14');
model.component('comp1').geom('geom1').feature('r16').set('size', {'a1 + 8*d' 'l'});
model.component('comp1').geom('geom1').feature('r16').set('pos', {'-W/2' '-8*(m+l)'});
model.component('comp1').geom('geom1').run('r16');
model.component('comp1').geom('geom1').feature.copy('r17', 'geom1/r15');
model.component('comp1').geom('geom1').feature('r17').set('size', {'b1+7*d' 'l'});
model.component('comp1').geom('geom1').feature('r17').setIndex('pos', 'W/2-(b1+7*d)', 0);
model.component('comp1').geom('geom1').feature('r17').setIndex('pos', '-(n+l) - 7*(m+l)', 1);
model.component('comp1').geom('geom1').run('r17');

model.param.set('H', '54 [mm]');

model.component('comp1').geom('geom1').run('fin');
model.component('comp1').geom('geom1').run('r17');
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({});
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'r1'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'r10' 'r11' 'r12' 'r13' 'r14' 'r15' 'r16' 'r17' 'r2' 'r3'  ...
'r4' 'r5' 'r6' 'r7' 'r8' 'r9'});
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').feature('dif1').set('keepsubtract', true);
model.component('comp1').geom('geom1').feature('dif1').set('keepadd', true);
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').feature('dif1').set('keepsubtract', false);
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').feature('dif1').set('keepadd', false);
model.component('comp1').geom('geom1').run('dif1');
model.component('comp1').geom('geom1').run;

model.component('comp1').material.remove('mat1');

model.component('comp1').physics.remove('ta');
model.component('comp1').physics.remove('acpr');

model.component('comp1').multiphysics.remove('atb1');

model.component('comp1').mesh.remove('mesh1');

model.study.remove('std1');

model.result('pg23').set('window', 'window1');
model.result('pg23').run;
model.result.remove('pg23');
model.result('pg25').run;
model.result.table.clear;
model.result.report.remove('rpt1');

model.label(['g' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'om' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'trie niloofar.mph']);

model.param.descr('H', 'hauteur');

model.label(['g' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'om' native2unicode(hex2dec({'00' 'e9'}), 'unicode') 'trie niloofar.mph']);

out = model;
